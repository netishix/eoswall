{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@angular/router/router.d.ts.ÉµEmptyOutletComponent.html","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/accordion/accordion-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/accordion/accordion.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/accordion/accordion.d.ts.NgbAccordion.html","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/alert/alert-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/alert/alert.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/alert/alert.d.ts.NgbAlert.html","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.d.ts.NgbDatepickerDayView.html","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-keymap-service.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month-view.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month-view.d.ts.NgbDatepickerMonthView.html","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.d.ts.NgbDatepickerNavigationSelect.html","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.d.ts.NgbDatepickerNavigation.html","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.d.ts.NgbDatepicker.html","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/modal/modal-window.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/modal/modal-window.d.ts.NgbModalWindow.html","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/popover/popover-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/popover/popover.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/popover/popover.d.ts.NgbPopoverWindow.html","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/tooltip/tooltip.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/tooltip/tooltip.d.ts.NgbTooltipWindow.html","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/typeahead/highlight.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/typeahead/highlight.d.ts.NgbHighlight.html","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.d.ts.NgbTypeaheadWindow.html","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/util/focus-trap.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/util/key.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/util/popup.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/util/positioning.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/util/triggers.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/util/util.js","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.server.module.ts","webpack:///./src/app/components/faq/faq.component.html","webpack:///./src/app/components/faq/faq.component.ts","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/modal-form-buy/modal-form-buy.component.html","webpack:///./src/app/components/modal-form-buy/modal-form-buy.component.ts","webpack:///./src/app/components/modal-form-update/modal-form-update.component.html","webpack:///./src/app/components/modal-form-update/modal-form-update.component.ts","webpack:///./src/app/components/modal-notification/modal-notification.component.html","webpack:///./src/app/components/modal-notification/modal-notification.component.ts","webpack:///./src/app/components/wall/wall.component.html","webpack:///./src/app/components/wall/wall.component.ts","webpack:///./src/app/components/why/why.component.html","webpack:///./src/app/components/why/why.component.ts","webpack:///./src/app/constants.ts","webpack:///./src/app/lib/asset.ts","webpack:///./src/app/lib/slot.ts","webpack:///./src/app/services/mouse.service.ts","webpack:///./src/app/validators/app.validators.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.server.ts","webpack:///external \"@angular/animations\"","webpack:///external \"@angular/animations/browser\"","webpack:///external \"@angular/common\"","webpack:///external \"@angular/common/http\"","webpack:///external \"@angular/core\"","webpack:///external \"@angular/forms\"","webpack:///external \"@angular/http\"","webpack:///external \"@angular/platform-browser\"","webpack:///external \"@angular/platform-browser/animations\"","webpack:///external \"@angular/platform-server\"","webpack:///external \"@angular/router\"","webpack:///external \"@ng-bootstrap/ng-bootstrap\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/accordion/accordion\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/accordion/accordion-config\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/accordion/accordion.module\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/alert/alert-config\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/alert/alert.module\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/buttons/buttons.module\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/carousel/carousel-config\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/carousel/carousel.module\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/collapse/collapse.module\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/modal/modal\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/modal/modal-ref\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/modal/modal-stack\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/modal/modal.module\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/pagination/pagination-config\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/pagination/pagination.module\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/popover/popover-config\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/popover/popover.module\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/rating/rating-config\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/rating/rating.module\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/tabset/tabset-config\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/tabset/tabset.module\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/timepicker/ngb-time-adapter\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/tooltip/tooltip\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/util/accessibility/live\"","webpack:///external \"@ng-bootstrap/ng-bootstrap/util/scrollbar\"","webpack:///external \"@ng-toolkit/universal\"","webpack:///external \"@nguniversal/module-map-ngfactory-loader\"","webpack:///external \"eosjs\"","webpack:///external \"rxjs\"","webpack:///external \"rxjs/operators\"","webpack:///external \"scatter-js/dist/scatter.esm\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;gECnEA,6SAAe;;;;;;;;;;;;;;;;;;;;;;ACAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,CAAC;AACO;AACR,4C;;;;;;;;;;;;;;;;;;;;;AChBqG;AAClF;AACU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAA0B,yCAAyC,IAAI;AAChF;AACA;AACA,gDAAgD;AAChD,SAAS,mEAAqB;AAC9B,MAAM;AACN;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAA0B,2CAA2C,IAAI;AAClF;AACA;AACA,kDAAkD;AAClD,SAAS,mEAAqB;AAC9B,MAAM;AACN;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,mBAAmB;AAC9E,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA,SAAS,wEAA0B,wBAAwB,IAAI;AAC/D;AACA;AACA;AACA,sBAAsB,4DAAc;AACpC,gBAAgB,4DAAc;AAC9B,mBAAmB,4DAAc;AACjC,kBAAkB,4DAAc;AAChC,uBAAuB,6FAA+C,qBAAqB,IAAI;AAC/F,yBAAyB,+FAAiD,qBAAqB,IAAI;AACnG;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,yBAAyB,EAAE;AAC9E;AACA;AACA,mCAAmC,0EAA0E,2BAA2B,EAAE,EAAE;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,iFAAiF,EAAE;AACjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,8DAA8D,wCAAwC,EAAE,wBAAwB,iBAAiB,EAAE;AACnJ;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B,8FAA8F;AACzH,sJAAsJ,UAAU,oXAAoX,aAAa,4JAA4J,UAAU;AACvsB,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C;AAC/C,SAAS,8EAA4B;AACrC,MAAM;AACN;AACA,oBAAoB,yFAA2C;AAC/D,uBAAuB,4DAAc;AACrC,8BAA8B,oFAAsC;AACpE,2BAA2B,4DAAc;AACzC,kBAAkB,4DAAc;AAChC,yBAAyB,6DAAe;AACxC;AACA;AACA,CAAC;AACO;AACR,qC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uDClKQ,yLACmG,KAC9F,iMAAgE,yBAAnD,6EAAkD,mDAA/D,YAAgE,EAAnD,SAAkD,2BAF/D,+EAAiB,GAAiB,2DAA6C,GACpD,kBAA2B,kCAD3D,YACmG,EAD9F,SAAiB,EAAiB,SAA6C,EACpD,SAA2B;uDAV7D,6FAAkB,KAChB,0HAA4H,KAC1H,4FAAiB,KACf,sPACsE,YADzC;;wBAA4B;MAAzD,wBACsE,sCACrD,uMAA8D,IAInF,4KACmG,iDALjE,oEAAgD,0CAA7D,YAA8D,EAAjD,SAAgD,GAKtB,yCAAsC,4BADlG,YACmG,EAAvC,SAAsC,mDATlF,+EAAwB,GAAC,wIAAkF,KAA3H,YAA4H,EAA5G,SAAwB,EAAC,SAAkF,GAE7D,kBAA2B,6BAAC,kBAAgC,2BACpH,kBAAmC,2BAAC,kBAA+B,uBADrE,YACsE,EADZ,SAA2B,EAAC,SAAgC,EACpH,SAAmC,EAAC,SAA+B,GAAC,mEACrD;uDANzB,0MAAgD,iDAAnB,mBAAkB,SAA/C,YAAgD,EAAnB,SAAkB;;;;;;;;;;;;;;;;;;;;;;ACD9B;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,CAAC;AACO;AACR,wC;;;;;;;;;;;;;;;;;ACjB2E;AAClD;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,uBAAuB;AAC1E;AACA,SAAS;AACT;AACA;AACA,wVAAwV;AACxV,iBAAiB,IAAI;AACrB;AACA;AACA,2CAA2C;AAC3C,SAAS,sEAAwB;AACjC,MAAM;AACN;AACA,yBAAyB,4DAAc;AACvC,kBAAkB,4DAAc;AAChC,mBAAmB,6DAAe;AAClC;AACA;AACA,CAAC;AACO;AACR,iC;;;;;;;;;;;;;;;;;;;;;;;;;;;mDChCM,kMAC2B,YAAzB;;wBAAwB;MAD1B,wBAC2B,KACzB,oGAAyB,wCAAO;mDAHpC,8GAA8F,KAC5F,wKAC2B,GAG3B,eAAY,iDAJJ,mBAAmB,cAA3B,YAC2B,EADnB,SAAmB,mDADxB,2FAA2E,IAAhF,YAA8F,EAAzF,SAA2E;;;;;;;;;;;;;;;;;;;;;ACDpF;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACoB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB,cAAc;AAChC,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB,cAAc;AAChC,kBAAkB;AAClB;AACA;AACA,gEAAgE,oDAAoD;AACpH;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB,cAAc;AAChC,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB,cAAc;AAChC,kBAAkB;AAClB;AACA;AACA,gEAAgE,oDAAoD;AACpH;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,CAAC;AACO;AACR,4C;;;;;;;;;;;;;;;;ACzEqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,CAAC;AACO;AACR,6C;;;;;;;;;;;;;;;;ACrBoD;AACpD;AACA;AACA;AACA,0DAA0D,mFAAmF;AAC7I;AACA,SAAS;AACT;AACA;AACA,2CAA2C,2BAA2B,oBAAoB,qBAAqB,0BAA0B,+BAA+B,gCAAgC,OAAO,qBAAqB,qBAAqB,OAAO;AAChQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iCAAiC,YAAY;AAC7C,iBAAiB,IAAI;AACrB;AACA;AACA;AACA,0BAA0B,4DAAc;AACxC,kBAAkB,4DAAc;AAChC,sBAAsB,4DAAc;AACpC,qBAAqB,4DAAc;AACnC,sBAAsB,4DAAc;AACpC;AACA;AACA,CAAC;AACO;AACR,+C;;;;;;;;;;;;;;;;;;;;;;;;;+DChCA,8IAAc;;;;;;;;;;;;;;;;;;;;;;;ACAd;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACuC;AACsC;AAC3D;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,kDAAkD,EAAE;AACvI;AACA;AACA;AACA;AACA,iFAAiF,yCAAyC;AAC1H,6EAA6E,qCAAqC;AAClH,4EAA4E,oCAAoC;AAChH;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,2DAA2D;AAC3D,SAAS,gCAAgC,+HAAmC,IAAI;AAChF,SAAS,kEAAkB;AAC3B,MAAM;AACN;AACA,CAAC;AACO;AACR,2C;;;;;;;;;;;;;;;;;;;;AC1DqB;AACU;AACT;AACH;AACL;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,6DAA6D;AAC7D,SAAS,kFAA8B;AACvC,SAAS,mEAAqB;AAC9B,MAAM;AACN;AACA,CAAC;AACO;AACR,qD;;;;;;;;;;;;;;;;;;AClE8D;AAC5C;AACU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B,iBAAiB;AAC5C,2CAA2C,uBAAuB,OAAO,4CAA4C,0BAA0B,2BAA2B,2BAA2B,OAAO,uBAAuB,uBAAuB,2BAA2B,OAAO,oBAAoB,+BAA+B,6BAA6B,sBAAsB,OAAO,wBAAwB,sDAAsD,yBAAyB,OAAO,yDAAyD,oBAAoB,qBAAqB,OAAO,mBAAmB,wBAAwB,OAAO,gDAAgD,wBAAwB,OAAO;AACjuB,iSAAiS,+BAA+B,yPAAyP,eAAe;AACxkB,iBAAiB,IAAI;AACrB;AACA;AACA,yDAAyD;AACzD,SAAS,4EAA2B;AACpC,MAAM;AACN;AACA,yBAAyB,4DAAc;AACvC,mBAAmB,4DAAc;AACjC,0BAA0B,4DAAc;AACxC,6BAA6B,4DAAc;AAC3C,oBAAoB,6DAAe;AACnC;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AsB,EAAE,GAAG,EAAE;AAC1G;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iCAAiC,+BAA+B;AAChE;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iCAAiC,iCAAiC;AAClE;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iCAAiC,6BAA6B;AAC9D;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iCAAiC,6BAA6B;AAC9D;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iCAAiC,yBAAyB;AAC1D;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iCAAiC,2BAA2B;AAC5D;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,kBAAkB;AAClE;AACA;AACA;AACA;AACA;AACA,6BAA6B,uBAAuB;AACpD;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA,iCAAiC,6BAA6B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,uDAAuD;AACvD,SAAS,mEAAqB;AAC9B,SAAS,4EAA2B;AACpC,MAAM;AACN;AACA,CAAC;AACO;AACR,8C;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/RkB;AACE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,qCAAqC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gCAAgC,EAAE;AACzF;AACA;AACA;AACA,uDAAuD,gCAAgC,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B,mBAAmB,kBAAkB,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wBAAwB;AACzD;AACA;AACA;AACA,wEAAwE,0CAA0C,EAAE;AACpH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gGAAgG;AAChG;AACA,KAAK;AACL;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oCAAoC;AAC1D;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,yBAAyB,iCAAiC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,wCAAwC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,uBAAuB,6DAA6D;AACpF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,4EAA4E,yEAA+B,EAAE;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;AC3JA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C,iD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRe;AAC2H;AAC9G;AACN;AACJ;AACa;AACM;AACX;AACI;AACL;AACG;AACJ;AACxB;AACA;AACA,+FAAyC,sBAAsB,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,sCAAsC;AACtC;AACA;AACA,uCAAuC,qCAAqC,EAAE;AAC9E,+EAA+E,oCAAoC,EAAE;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,2CAA2C;AACnF,2BAA2B;AAC3B,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kFAAwC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6IAA6I,6CAA6C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,mEAAmE,UAAU;AAC7E;AACA,gCAAgC,cAAc;AAC9C,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,2DAA2D,+BAA+B;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,CAAC;AACO;AACR,wC;;;;;;;;;;;;;ACnGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,SAAS,qDAAqD;AAC5G,8CAA8C,sDAAsD;AACpG;AACA,CAAC;AACO;AACR,oC;;;;;;;;;;;;;;;;ACjD2B;AAC3B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA;AACA,2BAA2B,4DAAc;AACzC;AACA;AACA,CAAC;AACO;AACR,0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA,CAAC,kDAAkD;AACnD,iD;;;;;;;;;;;;;;;;;;;;ACLmB;AAC6D;AAClD;AACP;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,gCAAgC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,0BAA0B,yBAAyB,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gCAAgC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAA0B,mDAAmD,IAAI;AAC1F;AACA;AACA,6CAA6C;AAC7C,SAAS,kEAAoB;AAC7B,SAAS,iEAAmB;AAC5B,SAAS,gEAAkB;AAC3B,SAAS,gFAAkC;AAC3C,SAAS,wEAA0B;AACnC,SAAS,0EAA0B;AACnC,SAAS,8DAAgB;AACzB,MAAM;AACN;AACA,uBAAuB,4DAAc;AACrC,sBAAsB,4DAAc;AACpC,uBAAuB,4DAAc;AACrC,4BAA4B,4DAAc;AAC1C,mBAAmB,6DAAe;AAClC,oBAAoB,6DAAe;AACnC,wBAAwB,4DAAc;AACtC;AACA;AACA,CAAC;AACO;AACR,mC;;;;;;;;;;;;;;;;;;;;;;;;;2DCvMA,8FAAmB,KAAM,sGAA2B,mBAAY;;;;;;;;;;;;;;;;;;;;;;;ACAZ;AACnB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,yDAAyD,gBAAgB,KAAK,MAAM,wCAAwC,MAAM;AAClI;AACA;AACA,oDAAoD,0BAA0B,OAAO;AACrF,iBAAiB,IAAI;AACrB;AACA;AACA;AACA,4BAA4B,4DAAc;AAC1C,oBAAoB,4DAAc;AAClC,kBAAkB,4DAAc;AAChC;AACA;AACA,CAAC;AACO;AACR,qC;;;;;;;;;;;;;;;;;;;;;;;;;;uDC1C8D,8FAA+C,qCAAQ,yDAAnC,mEAA0B,GAA9C,YAA+C,EAA3B,SAA0B,GAAC,oEAAQ;uDAAoC,qIAAQ;uDAAnG,4KAA+C,IAAe,4KAA6B,8DAArF,kBAAa,cAAnB,YAA+C,EAAzC,SAAa,GAAwD,mBAAe,cAA5B,YAA6B,EAAhB,SAAe;uDAAxJ,0MAA8D,iDAA3C,mBAAiB,QAApC,YAA8D,EAA3C,SAAiB;;;;;;;;;;;;;;;;;;;;;;;ACA0B;AAC3C;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,oEAAoE;AAC9H,0DAA0D,qCAAqC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,6BAA6B;AACxF,yDAAyD,oBAAoB;AAC7E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B,iEAAiE;AAC5F,koBAAkoB,iDAAiD;AACnrB,iBAAiB,IAAI;AACrB;AACA;AACA;AACA,gBAAgB,4DAAc;AAC9B,wBAAwB,4DAAc;AACtC,qBAAqB,4DAAc;AACnC,kBAAkB,4DAAc;AAChC,uBAAuB,4DAAc;AACrC,4BAA4B,4DAAc;AAC1C,yBAAyB,gFAAkC;AAC3D,+BAA+B,sFAAwC;AACvE;AACA;AACA,CAAC;AACO;AACR,4C;;;;;;;;;;;;;;;;;;;;;;;;;;;;6DC5EM,qOAA0D,yBAA3C,uCAA4B,kBAAC,kBAAa,eAAzD,YAA0D,EAA3C,SAA4B,EAAC,SAAa;;6DAGzD,0PAI2B,YADzB;;wBAA8B;MAC9B;;wBAAwB;MAJ1B,wBAI2B,KACvB,gQAC+E,GAA/E,iKAA8E,aADjE,2DAAyC,IAAtD,YAC+E,EAA/E,SAA8E,EADjE,SAAyC,mDAJxD,oCAAqB,iBACrB,yCAAkC,aAFpC,YAI2B,EAHzB,SAAqB,EACrB,SAAkC;6DANtC,wEAA+E,KAG/E,gNAAkE,iDAA/C,mBAAmB,UAAtC,YAAkE,EAA/C,SAAmB;;;;;;;;;;;;;;;;;;;;;;;;;ACJtB;AAC6B;AACnC;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yQAA8G,iBAAiB,EAAE;AACjI;AACA;AACA,4KAA8D,sEAA4B,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uQAAkG,eAAe,EAAE;AACnH,kDAAkD,mCAAmC,EAAE;AACvF;AACA,sC;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kBAAkB;AACnB,+B;;;;;;;;;;;;;;;;;ACfsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,iC;;;;;;;;;;;;;;AClDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,yCAAyC;AACtG,+DAA+D,yCAAyC;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAcuBAAuB,EAAE;AACnF;AACA;AACA;AACA;AACA,mDAAmD,qCAAqC,EAAE;AAC1F;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,qBAAqB,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,UAAU,2BAA2B,EAAE,EAAE;AAClF;AACA,uC;;;;;;;;;;;;;;;;ACtSA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,0DAA0D;AACxG;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA,6BAA6B,2BAA2B;AACxD;AACA;AACA;AACA;AACA,8EAA8E,2BAA2B,EAAE;AAC3G;AACA;AACA,KAAK;AACL,uEAAuE,+BAA+B,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,wBAAwB,6CAA6C,wBAAwB,EAAE,EAAE;AACjG;AACQ;AACR,oC;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,gC;;;;;;;;;;;;;;AChCA,6EAAuD;AACvD,kIAAiE;AACjE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2E;;;;;;;;;;;ACAA,kF;;;;;;;;;;;ACAA,kF;;;;;;;;;;;ACAA,0E;;;;;;;;;;;ACAA,0E;;;;;;;;;;;ACAA,8E;;;;;;;;;;;ACAA,gF;;;;;;;;;;;ACAA,gF;;;;;;;;;;;ACAA,gF;;;;;;;;;;;ACAA,4F;;;;;;;;;;;ACAA,oF;;;;;;;;;;;ACAA,kF;;;;;;;;;;;ACAA,oF;;;;;;;;;;;ACAA,+E;;;;;;;;;;;ACAA,4F;;;;;;;;;;;ACAA,gF;;;;;;;;;;;ACAA,gF;;;;;;;;;;;ACAA,mE;;;;;;;;;;;ACAA,uE;;;;;;;;;;;ACAA,yE;;;;;;;;;;;ACAA,0E;;;;;;;;;;;ACAA,oF;;;;;;;;;;;ACAA,oF;;;;;;;;;;;ACAA,8E;;;;;;;;;;;ACAA,8E;;;;;;;;;;;ACAA,sF;;;;;;;;;;;ACAA,sF;;;;;;;;;;;ACAA,4E;;;;;;;;;;;ACAA,4E;;;;;;;;;;;ACAA,4E;;;;;;;;;;;ACAA,4E;;;;;;;;;;;ACAA,mF;;;;;;;;;;;ACAA,oF;;;;;;;;;;;ACAA,oF;;;;;;;;;;;ACAA,uE;;;;;;;;;;;ACAA,8E;;;;;;;;;;;ACAA,8E;;;;;;;;;;;ACAA,kF;;;;;;;;;;;ACAA,kF;;;;;;;;;;;ACAA,+E;;;;;;;;;;;ACAA,sE;;;;;;;;;;;ACAA,kD;;;;;;;;;;;ACAA,qE;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,wD","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbAccordion component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the accordions used in the application.\n */\nvar NgbAccordionConfig = /** @class */ (function () {\n    function NgbAccordionConfig() {\n        this.closeOthers = false;\n    }\n    NgbAccordionConfig.decorators = [\n        { type: Injectable },\n    ];\n    return NgbAccordionConfig;\n}());\nexport { NgbAccordionConfig };\n//# sourceMappingURL=accordion-config.js.map","import { Component, ContentChildren, Directive, EventEmitter, Input, Output, QueryList, TemplateRef } from '@angular/core';\nimport { isString } from '../util/util';\nimport { NgbAccordionConfig } from './accordion-config';\nvar nextId = 0;\n/**\n * This directive should be used to wrap accordion panel titles that need to contain HTML markup or other directives.\n */\nvar NgbPanelTitle = /** @class */ (function () {\n    function NgbPanelTitle(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbPanelTitle.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbPanelTitle]' },] },\n    ];\n    /** @nocollapse */\n    NgbPanelTitle.ctorParameters = function () { return [\n        { type: TemplateRef, },\n    ]; };\n    return NgbPanelTitle;\n}());\nexport { NgbPanelTitle };\n/**\n * This directive must be used to wrap accordion panel content.\n */\nvar NgbPanelContent = /** @class */ (function () {\n    function NgbPanelContent(templateRef) {\n        this.templateRef = templateRef;\n    }\n    NgbPanelContent.decorators = [\n        { type: Directive, args: [{ selector: 'ng-template[ngbPanelContent]' },] },\n    ];\n    /** @nocollapse */\n    NgbPanelContent.ctorParameters = function () { return [\n        { type: TemplateRef, },\n    ]; };\n    return NgbPanelContent;\n}());\nexport { NgbPanelContent };\n/**\n * The NgbPanel directive represents an individual panel with the title and collapsible\n * content\n */\nvar NgbPanel = /** @class */ (function () {\n    function NgbPanel() {\n        /**\n           *  A flag determining whether the panel is disabled or not.\n           *  When disabled, the panel cannot be toggled.\n           */\n        this.disabled = false;\n        /**\n           *  An optional id for the panel. The id should be unique.\n           *  If not provided, it will be auto-generated.\n           */\n        this.id = \"ngb-panel-\" + nextId++;\n        /**\n           * A flag telling if the panel is currently open\n           */\n        this.isOpen = false;\n    }\n    NgbPanel.prototype.ngAfterContentChecked = function () {\n        // We are using @ContentChildren instead of @ContantChild as in the Angular version being used\n        // only @ContentChildren allows us to specify the {descendants: false} option.\n        // Without {descendants: false} we are hitting bugs described in:\n        // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n        this.titleTpl = this.titleTpls.first;\n        this.contentTpl = this.contentTpls.first;\n    };\n    NgbPanel.decorators = [\n        { type: Directive, args: [{ selector: 'ngb-panel' },] },\n    ];\n    /** @nocollapse */\n    NgbPanel.propDecorators = {\n        \"disabled\": [{ type: Input },],\n        \"id\": [{ type: Input },],\n        \"title\": [{ type: Input },],\n        \"type\": [{ type: Input },],\n        \"titleTpls\": [{ type: ContentChildren, args: [NgbPanelTitle, { descendants: false },] },],\n        \"contentTpls\": [{ type: ContentChildren, args: [NgbPanelContent, { descendants: false },] },],\n    };\n    return NgbPanel;\n}());\nexport { NgbPanel };\n/**\n * The NgbAccordion directive is a collection of panels.\n * It can assure that only one panel can be opened at a time.\n */\nvar NgbAccordion = /** @class */ (function () {\n    function NgbAccordion(config) {\n        /**\n           * An array or comma separated strings of panel identifiers that should be opened\n           */\n        this.activeIds = [];\n        /**\n           * Whether the closed panels should be hidden without destroying them\n           */\n        this.destroyOnHide = true;\n        /**\n           * A panel change event fired right before the panel toggle happens. See NgbPanelChangeEvent for payload details\n           */\n        this.panelChange = new EventEmitter();\n        this.type = config.type;\n        this.closeOtherPanels = config.closeOthers;\n    }\n    /**\n     * Programmatically toggle a panel with a given id.\n     */\n    /**\n       * Programmatically toggle a panel with a given id.\n       */\n    NgbAccordion.prototype.toggle = /**\n       * Programmatically toggle a panel with a given id.\n       */\n    function (panelId) {\n        var panel = this.panels.find(function (p) { return p.id === panelId; });\n        if (panel && !panel.disabled) {\n            var defaultPrevented_1 = false;\n            this.panelChange.emit({ panelId: panelId, nextState: !panel.isOpen, preventDefault: function () { defaultPrevented_1 = true; } });\n            if (!defaultPrevented_1) {\n                panel.isOpen = !panel.isOpen;\n                if (this.closeOtherPanels) {\n                    this._closeOthers(panelId);\n                }\n                this._updateActiveIds();\n            }\n        }\n    };\n    NgbAccordion.prototype.ngAfterContentChecked = function () {\n        var _this = this;\n        // active id updates\n        if (isString(this.activeIds)) {\n            this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n        }\n        // update panels open states\n        this.panels.forEach(function (panel) { return panel.isOpen = !panel.disabled && _this.activeIds.indexOf(panel.id) > -1; });\n        // closeOthers updates\n        if (this.activeIds.length > 1 && this.closeOtherPanels) {\n            this._closeOthers(this.activeIds[0]);\n            this._updateActiveIds();\n        }\n    };\n    NgbAccordion.prototype._closeOthers = function (panelId) {\n        this.panels.forEach(function (panel) {\n            if (panel.id !== panelId) {\n                panel.isOpen = false;\n            }\n        });\n    };\n    NgbAccordion.prototype._updateActiveIds = function () {\n        this.activeIds = this.panels.filter(function (panel) { return panel.isOpen && !panel.disabled; }).map(function (panel) { return panel.id; });\n    };\n    NgbAccordion.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-accordion',\n                    exportAs: 'ngbAccordion',\n                    host: { 'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels' },\n                    template: \"\\n    <ng-template ngFor let-panel [ngForOf]=\\\"panels\\\">\\n      <div class=\\\"card\\\">\\n        <div role=\\\"tab\\\" id=\\\"{{panel.id}}-header\\\" [class]=\\\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\\\">\\n          <h5 class=\\\"mb-0\\\">\\n            <button class=\\\"btn btn-link\\\" (click)=\\\"!!toggle(panel.id)\\\" [disabled]=\\\"panel.disabled\\\" [class.collapsed]=\\\"panel.isOpen\\\"\\n              [attr.aria-expanded]=\\\"panel.isOpen\\\" [attr.aria-controls]=\\\"panel.id\\\">\\n              {{panel.title}}<ng-template [ngTemplateOutlet]=\\\"panel.titleTpl?.templateRef\\\"></ng-template>\\n            </button>\\n          </h5>\\n        </div>\\n        <div id=\\\"{{panel.id}}\\\" role=\\\"tabpanel\\\" [attr.aria-labelledby]=\\\"panel.id + '-header'\\\"\\n             class=\\\"card-body collapse\\\" [class.show]=\\\"panel.isOpen\\\" *ngIf=\\\"!destroyOnHide || panel.isOpen\\\">\\n             <ng-template [ngTemplateOutlet]=\\\"panel.contentTpl?.templateRef\\\"></ng-template>\\n        </div>\\n      </div>\\n    </ng-template>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbAccordion.ctorParameters = function () { return [\n        { type: NgbAccordionConfig, },\n    ]; };\n    NgbAccordion.propDecorators = {\n        \"panels\": [{ type: ContentChildren, args: [NgbPanel,] },],\n        \"activeIds\": [{ type: Input },],\n        \"closeOtherPanels\": [{ type: Input, args: ['closeOthers',] },],\n        \"destroyOnHide\": [{ type: Input },],\n        \"type\": [{ type: Input },],\n        \"panelChange\": [{ type: Output },],\n    };\n    return NgbAccordion;\n}());\nexport { NgbAccordion };\n//# sourceMappingURL=accordion.js.map","\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div class=\"card\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <h5 class=\"mb-0\">\n            <button class=\"btn btn-link\" (click)=\"!!toggle(panel.id)\" [disabled]=\"panel.disabled\" [class.collapsed]=\"panel.isOpen\"\n              [attr.aria-expanded]=\"panel.isOpen\" [attr.aria-controls]=\"panel.id\">\n              {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n            </button>\n          </h5>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"card-body collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n             <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </div>\n    </ng-template>\n  ","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbAlert component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the alerts used in the application.\n */\nvar NgbAlertConfig = /** @class */ (function () {\n    function NgbAlertConfig() {\n        this.dismissible = true;\n        this.type = 'warning';\n    }\n    NgbAlertConfig.decorators = [\n        { type: Injectable },\n    ];\n    return NgbAlertConfig;\n}());\nexport { NgbAlertConfig };\n//# sourceMappingURL=alert-config.js.map","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, } from '@angular/core';\nimport { NgbAlertConfig } from './alert-config';\n/**\n * Alerts can be used to provide feedback messages.\n */\nvar NgbAlert = /** @class */ (function () {\n    function NgbAlert(config) {\n        /**\n           * An event emitted when the close button is clicked. This event has no payload. Only relevant for dismissible alerts.\n           */\n        this.close = new EventEmitter();\n        this.dismissible = config.dismissible;\n        this.type = config.type;\n    }\n    NgbAlert.prototype.closeHandler = function () { this.close.emit(null); };\n    NgbAlert.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-alert',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: \"\\n    <div [class]=\\\"'alert alert-' + type + (dismissible ? ' alert-dismissible' : '')\\\" role=\\\"alert\\\">\\n      <button *ngIf=\\\"dismissible\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" i18n-aria-label=\\\"@@ngb.alert.close\\\"\\n        (click)=\\\"closeHandler()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n      <ng-content></ng-content>\\n    </div>\\n    \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbAlert.ctorParameters = function () { return [\n        { type: NgbAlertConfig, },\n    ]; };\n    NgbAlert.propDecorators = {\n        \"dismissible\": [{ type: Input },],\n        \"type\": [{ type: Input },],\n        \"close\": [{ type: Output },],\n    };\n    return NgbAlert;\n}());\nexport { NgbAlert };\n//# sourceMappingURL=alert.js.map","\n    <div [class]=\"'alert alert-' + type + (dismissible ? ' alert-dismissible' : '')\" role=\"alert\">\n      <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n        (click)=\"closeHandler()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n      <ng-content></ng-content>\n    </div>\n    ","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Injectable } from '@angular/core';\n/**\n * Abstract type serving as a DI token for the service converting from your application Date model to internal\n * NgbDateStruct model.\n * A default implementation converting from and to NgbDateStruct is provided for retro-compatibility,\n * but you can provide another implementation to use an alternative format, ie for using with native Date Object.\n */\nvar NgbDateAdapter = /** @class */ (function () {\n    function NgbDateAdapter() {\n    }\n    NgbDateAdapter.decorators = [\n        { type: Injectable },\n    ];\n    return NgbDateAdapter;\n}());\nexport { NgbDateAdapter };\nvar NgbDateStructAdapter = /** @class */ (function (_super) {\n    __extends(NgbDateStructAdapter, _super);\n    function NgbDateStructAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     * @param  {NgbDateStruct} value\n     * @return {NgbDateStruct}\n     */\n    /**\n       * Converts a NgbDateStruct value into NgbDateStruct value\n       * @param  {NgbDateStruct} value\n       * @return {NgbDateStruct}\n       */\n    NgbDateStructAdapter.prototype.fromModel = /**\n       * Converts a NgbDateStruct value into NgbDateStruct value\n       * @param  {NgbDateStruct} value\n       * @return {NgbDateStruct}\n       */\n    function (date) {\n        return (date && date.year && date.month && date.day) ? { year: date.year, month: date.month, day: date.day } : null;\n    };\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     * @param  {NgbDateStruct} value\n     * @return {NgbDateStruct}\n     */\n    /**\n       * Converts a NgbDateStruct value into NgbDateStruct value\n       * @param  {NgbDateStruct} value\n       * @return {NgbDateStruct}\n       */\n    NgbDateStructAdapter.prototype.toModel = /**\n       * Converts a NgbDateStruct value into NgbDateStruct value\n       * @param  {NgbDateStruct} value\n       * @return {NgbDateStruct}\n       */\n    function (date) {\n        return (date && date.year && date.month && date.day) ? { year: date.year, month: date.month, day: date.day } : null;\n    };\n    NgbDateStructAdapter.decorators = [\n        { type: Injectable },\n    ];\n    return NgbDateStructAdapter;\n}(NgbDateAdapter));\nexport { NgbDateStructAdapter };\n//# sourceMappingURL=ngb-date-adapter.js.map","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbDatepicker component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\nvar NgbDatepickerConfig = /** @class */ (function () {\n    function NgbDatepickerConfig() {\n        this.displayMonths = 1;\n        this.firstDayOfWeek = 1;\n        this.navigation = 'select';\n        this.outsideDays = 'visible';\n        this.showWeekdays = true;\n        this.showWeekNumbers = false;\n    }\n    NgbDatepickerConfig.decorators = [\n        { type: Injectable },\n    ];\n    return NgbDatepickerConfig;\n}());\nexport { NgbDatepickerConfig };\n//# sourceMappingURL=datepicker-config.js.map","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nvar NgbDatepickerDayView = /** @class */ (function () {\n    function NgbDatepickerDayView() {\n    }\n    NgbDatepickerDayView.prototype.isMuted = function () { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); };\n    NgbDatepickerDayView.decorators = [\n        { type: Component, args: [{\n                    selector: '[ngbDatepickerDayView]',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styles: [\"\\n    :host {\\n      text-align: center;\\n      width: 2rem;\\n      height: 2rem;\\n      line-height: 2rem;\\n      border-radius: 0.25rem;\\n      background: transparent;\\n    }\\n    :host.outside {\\n      opacity: 0.5;\\n    }\\n  \"],\n                    host: {\n                        'class': 'btn-light',\n                        '[class.bg-primary]': 'selected',\n                        '[class.text-white]': 'selected',\n                        '[class.text-muted]': 'isMuted()',\n                        '[class.outside]': 'isMuted()',\n                        '[class.active]': 'focused'\n                    },\n                    template: \"{{ date.day }}\"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerDayView.propDecorators = {\n        \"currentMonth\": [{ type: Input },],\n        \"date\": [{ type: Input },],\n        \"disabled\": [{ type: Input },],\n        \"focused\": [{ type: Input },],\n        \"selected\": [{ type: Input },],\n    };\n    return NgbDatepickerDayView;\n}());\nexport { NgbDatepickerDayView };\n//# sourceMappingURL=datepicker-day-view.js.map","{{ date.day }}","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Inject, Injectable, LOCALE_ID } from '@angular/core';\nimport { FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth } from '@angular/common';\nimport { DatePipe } from '@angular/common';\n/**\n * Type of the service supplying month and weekday names to to NgbDatepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n * See the i18n demo for how to extend this class and define a custom provider for i18n.\n */\nvar NgbDatepickerI18n = /** @class */ (function () {\n    function NgbDatepickerI18n() {\n    }\n    NgbDatepickerI18n.decorators = [\n        { type: Injectable },\n    ];\n    return NgbDatepickerI18n;\n}());\nexport { NgbDatepickerI18n };\nvar NgbDatepickerI18nDefault = /** @class */ (function (_super) {\n    __extends(NgbDatepickerI18nDefault, _super);\n    function NgbDatepickerI18nDefault(_locale, _datePipe) {\n        var _this = _super.call(this) || this;\n        _this._locale = _locale;\n        _this._datePipe = _datePipe;\n        var weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n        _this._weekdaysShort = weekdaysStartingOnSunday.map(function (day, index) { return weekdaysStartingOnSunday[(index + 1) % 7]; });\n        _this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n        _this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n        return _this;\n    }\n    NgbDatepickerI18nDefault.prototype.getWeekdayShortName = function (weekday) { return this._weekdaysShort[weekday - 1]; };\n    NgbDatepickerI18nDefault.prototype.getMonthShortName = function (month) { return this._monthsShort[month - 1]; };\n    NgbDatepickerI18nDefault.prototype.getMonthFullName = function (month) { return this._monthsFull[month - 1]; };\n    NgbDatepickerI18nDefault.prototype.getDayAriaLabel = function (date) {\n        var jsDate = new Date(date.year, date.month - 1, date.day);\n        return this._datePipe.transform(jsDate, 'fullDate', null, this._locale);\n    };\n    NgbDatepickerI18nDefault.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbDatepickerI18nDefault.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID,] },] },\n        { type: DatePipe, },\n    ]; };\n    return NgbDatepickerI18nDefault;\n}(NgbDatepickerI18n));\nexport { NgbDatepickerI18nDefault };\n//# sourceMappingURL=datepicker-i18n.js.map","import { Injectable } from '@angular/core';\nimport { NgbDatepickerService } from './datepicker-service';\nimport { NgbCalendar } from './ngb-calendar';\nimport { toString } from '../util/util';\nimport { Key } from '../util/key';\nvar NgbDatepickerKeyMapService = /** @class */ (function () {\n    function NgbDatepickerKeyMapService(_service, _calendar) {\n        var _this = this;\n        this._service = _service;\n        this._calendar = _calendar;\n        _service.model$.subscribe(function (model) {\n            _this._minDate = model.minDate;\n            _this._maxDate = model.maxDate;\n            _this._firstViewDate = model.firstDate;\n            _this._lastViewDate = model.lastDate;\n        });\n    }\n    NgbDatepickerKeyMapService.prototype.processKey = function (event) {\n        if (Key[toString(event.which)]) {\n            switch (event.which) {\n                case Key.PageUp:\n                    this._service.focusMove(event.shiftKey ? 'y' : 'm', -1);\n                    break;\n                case Key.PageDown:\n                    this._service.focusMove(event.shiftKey ? 'y' : 'm', 1);\n                    break;\n                case Key.End:\n                    this._service.focus(event.shiftKey ? this._maxDate : this._lastViewDate);\n                    break;\n                case Key.Home:\n                    this._service.focus(event.shiftKey ? this._minDate : this._firstViewDate);\n                    break;\n                case Key.ArrowLeft:\n                    this._service.focusMove('d', -1);\n                    break;\n                case Key.ArrowUp:\n                    this._service.focusMove('d', -this._calendar.getDaysPerWeek());\n                    break;\n                case Key.ArrowRight:\n                    this._service.focusMove('d', 1);\n                    break;\n                case Key.ArrowDown:\n                    this._service.focusMove('d', this._calendar.getDaysPerWeek());\n                    break;\n                case Key.Enter:\n                case Key.Space:\n                    this._service.focusSelect();\n                    break;\n                default:\n                    return;\n            }\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n    NgbDatepickerKeyMapService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbDatepickerKeyMapService.ctorParameters = function () { return [\n        { type: NgbDatepickerService, },\n        { type: NgbCalendar, },\n    ]; };\n    return NgbDatepickerKeyMapService;\n}());\nexport { NgbDatepickerKeyMapService };\n//# sourceMappingURL=datepicker-keymap-service.js.map","import { Component, Input, TemplateRef, Output, EventEmitter } from '@angular/core';\nimport { NgbDate } from './ngb-date';\nimport { NgbDatepickerI18n } from './datepicker-i18n';\nvar NgbDatepickerMonthView = /** @class */ (function () {\n    function NgbDatepickerMonthView(i18n) {\n        this.i18n = i18n;\n        this.select = new EventEmitter();\n    }\n    NgbDatepickerMonthView.prototype.doSelect = function (day) {\n        if (!day.context.disabled && !day.hidden) {\n            this.select.emit(NgbDate.from(day.date));\n        }\n    };\n    NgbDatepickerMonthView.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-datepicker-month-view',\n                    host: { 'role': 'grid' },\n                    styles: [\"\\n    :host {\\n      display: block;\\n    }\\n    .ngb-dp-weekday, .ngb-dp-week-number {\\n      line-height: 2rem;\\n      text-align: center;\\n      font-style: italic;\\n    }\\n    .ngb-dp-weekday {\\n      color: #5bc0de;\\n      color: var(--info);\\n    }\\n    .ngb-dp-week {\\n      border-radius: 0.25rem;\\n      display: -ms-flexbox;\\n      display: flex;\\n    }\\n    .ngb-dp-weekdays {\\n      border-bottom: 1px solid rgba(0, 0, 0, 0.125);\\n      border-radius: 0;\\n    }\\n    .ngb-dp-day, .ngb-dp-weekday, .ngb-dp-week-number {\\n      width: 2rem;\\n      height: 2rem;\\n    }\\n    .ngb-dp-day {\\n      cursor: pointer;\\n    }\\n    .ngb-dp-day.disabled, .ngb-dp-day.hidden {\\n      cursor: default;\\n    }\\n  \"],\n                    template: \"\\n    <div *ngIf=\\\"showWeekdays\\\" class=\\\"ngb-dp-week ngb-dp-weekdays bg-light\\\">\\n      <div *ngIf=\\\"showWeekNumbers\\\" class=\\\"ngb-dp-weekday ngb-dp-showweek\\\"></div>\\n      <div *ngFor=\\\"let w of month.weekdays\\\" class=\\\"ngb-dp-weekday small\\\">\\n        {{ i18n.getWeekdayShortName(w) }}\\n      </div>\\n    </div>\\n    <ng-template ngFor let-week [ngForOf]=\\\"month.weeks\\\">\\n      <div *ngIf=\\\"!week.collapsed\\\" class=\\\"ngb-dp-week\\\" role=\\\"row\\\">\\n        <div *ngIf=\\\"showWeekNumbers\\\" class=\\\"ngb-dp-week-number small text-muted\\\">{{ week.number }}</div>\\n        <div *ngFor=\\\"let day of week.days\\\" (click)=\\\"doSelect(day)\\\" class=\\\"ngb-dp-day\\\" role=\\\"gridcell\\\"\\n          [class.disabled]=\\\"day.context.disabled\\\"\\n          [tabindex]=\\\"day.tabindex\\\"\\n          [class.hidden]=\\\"day.hidden\\\"\\n          [attr.aria-label]=\\\"day.ariaLabel\\\">\\n          <ng-template [ngIf]=\\\"!day.hidden\\\">\\n            <ng-template [ngTemplateOutlet]=\\\"dayTemplate\\\" [ngTemplateOutletContext]=\\\"day.context\\\"></ng-template>\\n          </ng-template>\\n        </div>\\n      </div>\\n    </ng-template>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerMonthView.ctorParameters = function () { return [\n        { type: NgbDatepickerI18n, },\n    ]; };\n    NgbDatepickerMonthView.propDecorators = {\n        \"dayTemplate\": [{ type: Input },],\n        \"month\": [{ type: Input },],\n        \"showWeekdays\": [{ type: Input },],\n        \"showWeekNumbers\": [{ type: Input },],\n        \"select\": [{ type: Output },],\n    };\n    return NgbDatepickerMonthView;\n}());\nexport { NgbDatepickerMonthView };\n//# sourceMappingURL=datepicker-month-view.js.map","\n    <div *ngIf=\"showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays bg-light\">\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of month.weekdays\" class=\"ngb-dp-weekday small\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"month.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ week.number }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day)\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  ","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { NgbDate } from './ngb-date';\nimport { toInteger } from '../util/util';\nimport { NgbDatepickerI18n } from './datepicker-i18n';\nvar NgbDatepickerNavigationSelect = /** @class */ (function () {\n    function NgbDatepickerNavigationSelect(i18n) {\n        this.i18n = i18n;\n        this.select = new EventEmitter();\n    }\n    NgbDatepickerNavigationSelect.prototype.changeMonth = function (month) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); };\n    NgbDatepickerNavigationSelect.prototype.changeYear = function (year) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); };\n    NgbDatepickerNavigationSelect.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-datepicker-navigation-select',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styles: [\"\\n    :host>select {\\n      display: flex;\\n      display: -ms-flexbox;\\n      -ms-flex: 1 1 auto;\\n      width: 100%;\\n      padding: 0 0.5rem;\\n      font-size: 0.875rem;\\n      height: 1.85rem;\\n    }\\n  \"],\n                    template: \"\\n    <select\\n      [disabled]=\\\"disabled\\\"\\n      class=\\\"custom-select\\\"\\n      [value]=\\\"date?.month\\\"\\n      (change)=\\\"changeMonth($event.target.value)\\\">\\n        <option *ngFor=\\\"let m of months\\\" [attr.aria-label]=\\\"i18n.getMonthFullName(m)\\\" [value]=\\\"m\\\">{{ i18n.getMonthShortName(m) }}</option>\\n    </select><select\\n      [disabled]=\\\"disabled\\\"\\n      class=\\\"custom-select\\\"\\n      [value]=\\\"date?.year\\\"\\n      (change)=\\\"changeYear($event.target.value)\\\">\\n        <option *ngFor=\\\"let y of years\\\" [value]=\\\"y\\\">{{ y }}</option>\\n    </select>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerNavigationSelect.ctorParameters = function () { return [\n        { type: NgbDatepickerI18n, },\n    ]; };\n    NgbDatepickerNavigationSelect.propDecorators = {\n        \"date\": [{ type: Input },],\n        \"disabled\": [{ type: Input },],\n        \"months\": [{ type: Input },],\n        \"years\": [{ type: Input },],\n        \"select\": [{ type: Output },],\n    };\n    return NgbDatepickerNavigationSelect;\n}());\nexport { NgbDatepickerNavigationSelect };\n//# sourceMappingURL=datepicker-navigation-select.js.map","\n    <select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m)\" [value]=\"m\">{{ i18n.getMonthShortName(m) }}</option>\n    </select><select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ y }}</option>\n    </select>\n  ","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { NavigationEvent } from './datepicker-view-model';\nimport { NgbDate } from './ngb-date';\nimport { NgbDatepickerI18n } from './datepicker-i18n';\n// The -ms- and -webkit- element for the CSS can be removed if we are generating the CSS using SASS.\nvar NgbDatepickerNavigation = /** @class */ (function () {\n    function NgbDatepickerNavigation(i18n) {\n        this.i18n = i18n;\n        this.navigation = NavigationEvent;\n        this.months = [];\n        this.navigate = new EventEmitter();\n        this.select = new EventEmitter();\n    }\n    NgbDatepickerNavigation.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-datepicker-navigation',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styles: [\"\\n    :host {\\n      display: -ms-flexbox;\\n      display: flex;\\n      align-items: center;\\n    }\\n    .ngb-dp-navigation-chevron {\\n      border-style: solid;\\n      border-width: 0.2em 0.2em 0 0;\\n      display: inline-block;\\n      width: 0.75em;\\n      height: 0.75em;\\n      margin-left: 0.25em;\\n      margin-right: 0.15em;\\n      transform: rotate(-135deg);\\n      -ms-transform: rotate(-135deg);\\n    }\\n    .right .ngb-dp-navigation-chevron {\\n      -ms-transform: rotate(45deg);\\n      transform: rotate(45deg);\\n      margin-left: 0.15em;\\n      margin-right: 0.25em;\\n    }\\n    .ngb-dp-arrow {\\n      display: -ms-flexbox;\\n      display: flex;\\n      -ms-flex: 1 1 auto;\\n      flex-grow: 1;\\n      padding-right: 0;\\n      padding-left: 0;\\n      margin: 0;\\n      width: 2rem;\\n      height: 2rem;\\n    }\\n    .ngb-dp-arrow.right {\\n      -ms-flex-pack: end;\\n      justify-content: flex-end;\\n    }\\n    .ngb-dp-arrow-btn {\\n      padding: 0 0.25rem;\\n      margin: 0 0.5rem;\\n      border: none;\\n      background-color: transparent;\\n      z-index: 1;\\n    }\\n    .ngb-dp-arrow-btn:focus {\\n      outline: auto 1px;\\n    }\\n    .ngb-dp-month-name {\\n      font-size: larger;\\n      height: 2rem;\\n      line-height: 2rem;\\n      text-align: center;\\n    }\\n    .ngb-dp-navigation-select {\\n      display: -ms-flexbox;\\n      display: flex;\\n      -ms-flex: 1 1 9rem;\\n      flex-grow: 1;\\n      flex-basis: 9rem;\\n    }\\n  \"],\n                    template: \"\\n    <div class=\\\"ngb-dp-arrow\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-link ngb-dp-arrow-btn\\\" (click)=\\\"!!navigate.emit(navigation.PREV)\\\" [disabled]=\\\"prevDisabled\\\"\\n              i18n-aria-label=\\\"@@ngb.datepicker.previous-month\\\" aria-label=\\\"Previous month\\\"\\n              i18n-title=\\\"@@ngb.datepicker.previous-month\\\" title=\\\"Previous month\\\">\\n        <span class=\\\"ngb-dp-navigation-chevron\\\"></span>\\n      </button>\\n    </div>\\n    <ngb-datepicker-navigation-select *ngIf=\\\"showSelect\\\" class=\\\"ngb-dp-navigation-select\\\"\\n      [date]=\\\"date\\\"\\n      [disabled] = \\\"disabled\\\"\\n      [months]=\\\"selectBoxes.months\\\"\\n      [years]=\\\"selectBoxes.years\\\"\\n      (select)=\\\"select.emit($event)\\\">\\n    </ngb-datepicker-navigation-select>\\n\\n    <ng-template *ngIf=\\\"!showSelect\\\" ngFor let-month [ngForOf]=\\\"months\\\" let-i=\\\"index\\\">\\n      <div class=\\\"ngb-dp-arrow\\\" *ngIf=\\\"i > 0\\\"></div>\\n      <div class=\\\"ngb-dp-month-name\\\">\\n        {{ i18n.getMonthFullName(month.number) }} {{ month.year }}\\n      </div>\\n      <div class=\\\"ngb-dp-arrow\\\" *ngIf=\\\"i !== months.length - 1\\\"></div>\\n    </ng-template>\\n    <div class=\\\"ngb-dp-arrow right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-link ngb-dp-arrow-btn\\\" (click)=\\\"!!navigate.emit(navigation.NEXT)\\\" [disabled]=\\\"nextDisabled\\\"\\n              i18n-aria-label=\\\"@@ngb.datepicker.next-month\\\" aria-label=\\\"Next month\\\"\\n              i18n-title=\\\"@@ngb.datepicker.next-month\\\" title=\\\"Next month\\\">\\n        <span class=\\\"ngb-dp-navigation-chevron\\\"></span>\\n      </button>\\n    </div>\\n    \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDatepickerNavigation.ctorParameters = function () { return [\n        { type: NgbDatepickerI18n, },\n    ]; };\n    NgbDatepickerNavigation.propDecorators = {\n        \"date\": [{ type: Input },],\n        \"disabled\": [{ type: Input },],\n        \"months\": [{ type: Input },],\n        \"showSelect\": [{ type: Input },],\n        \"prevDisabled\": [{ type: Input },],\n        \"nextDisabled\": [{ type: Input },],\n        \"selectBoxes\": [{ type: Input },],\n        \"navigate\": [{ type: Output },],\n        \"select\": [{ type: Output },],\n    };\n    return NgbDatepickerNavigation;\n}());\nexport { NgbDatepickerNavigation };\n//# sourceMappingURL=datepicker-navigation.js.map","\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"!!navigate.emit(navigation.PREV)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number) }} {{ month.year }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"!!navigate.emit(navigation.NEXT)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    ","import { NgbCalendar } from './ngb-calendar';\nimport { NgbDate } from './ngb-date';\nimport { Injectable } from '@angular/core';\nimport { isInteger, toInteger } from '../util/util';\nimport { Subject } from 'rxjs';\nimport { buildMonths, checkDateInRange, checkMinBeforeMax, isChangedDate, isDateSelectable, generateSelectBoxYears, generateSelectBoxMonths, prevMonthDisabled, nextMonthDisabled } from './datepicker-tools';\nimport { filter } from 'rxjs/operators';\nimport { NgbDatepickerI18n } from './datepicker-i18n';\nvar NgbDatepickerService = /** @class */ (function () {\n    function NgbDatepickerService(_calendar, _i18n) {\n        this._calendar = _calendar;\n        this._i18n = _i18n;\n        this._model$ = new Subject();\n        this._select$ = new Subject();\n        this._state = {\n            disabled: false,\n            displayMonths: 1,\n            firstDayOfWeek: 1,\n            focusVisible: false,\n            months: [],\n            navigation: 'select',\n            outsideDays: 'visible',\n            prevDisabled: false,\n            nextDisabled: false,\n            selectBoxes: { years: [], months: [] },\n            selectedDate: null\n        };\n    }\n    Object.defineProperty(NgbDatepickerService.prototype, \"model$\", {\n        get: function () { return this._model$.pipe(filter(function (model) { return model.months.length > 0; })); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"select$\", {\n        get: function () { return this._select$.pipe(filter(function (date) { return date !== null; })); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"disabled\", {\n        set: function (disabled) {\n            if (this._state.disabled !== disabled) {\n                this._nextState({ disabled: disabled });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"displayMonths\", {\n        set: function (displayMonths) {\n            displayMonths = toInteger(displayMonths);\n            if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n                this._nextState({ displayMonths: displayMonths });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"firstDayOfWeek\", {\n        set: function (firstDayOfWeek) {\n            firstDayOfWeek = toInteger(firstDayOfWeek);\n            if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n                this._nextState({ firstDayOfWeek: firstDayOfWeek });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"focusVisible\", {\n        set: function (focusVisible) {\n            if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n                this._nextState({ focusVisible: focusVisible });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"maxDate\", {\n        set: function (date) {\n            var maxDate = this.toValidDate(date, null);\n            if (isChangedDate(this._state.maxDate, maxDate)) {\n                this._nextState({ maxDate: maxDate });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"markDisabled\", {\n        set: function (markDisabled) {\n            if (this._state.markDisabled !== markDisabled) {\n                this._nextState({ markDisabled: markDisabled });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"minDate\", {\n        set: function (date) {\n            var minDate = this.toValidDate(date, null);\n            if (isChangedDate(this._state.minDate, minDate)) {\n                this._nextState({ minDate: minDate });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"navigation\", {\n        set: function (navigation) {\n            if (this._state.navigation !== navigation) {\n                this._nextState({ navigation: navigation });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgbDatepickerService.prototype, \"outsideDays\", {\n        set: function (outsideDays) {\n            if (this._state.outsideDays !== outsideDays) {\n                this._nextState({ outsideDays: outsideDays });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgbDatepickerService.prototype.focus = function (date) {\n        if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n            this._nextState({ focusDate: date });\n        }\n    };\n    NgbDatepickerService.prototype.focusMove = function (period, number) {\n        this.focus(this._calendar.getNext(this._state.focusDate, period, number));\n    };\n    NgbDatepickerService.prototype.focusSelect = function () {\n        if (isDateSelectable(this._state.focusDate, this._state)) {\n            this.select(this._state.focusDate, { emitEvent: true });\n        }\n    };\n    NgbDatepickerService.prototype.open = function (date) {\n        var firstDate = this.toValidDate(date, this._calendar.getToday());\n        if (!this._state.disabled) {\n            this._nextState({ firstDate: firstDate });\n        }\n    };\n    NgbDatepickerService.prototype.select = function (date, options) {\n        if (options === void 0) { options = {}; }\n        var selectedDate = this.toValidDate(date, null);\n        if (!this._state.disabled) {\n            if (isChangedDate(this._state.selectedDate, selectedDate)) {\n                this._nextState({ selectedDate: selectedDate });\n            }\n            if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n                this._select$.next(selectedDate);\n            }\n        }\n    };\n    NgbDatepickerService.prototype.toValidDate = function (date, defaultValue) {\n        var ngbDate = NgbDate.from(date);\n        if (defaultValue === undefined) {\n            defaultValue = this._calendar.getToday();\n        }\n        return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n    };\n    NgbDatepickerService.prototype._nextState = function (patch) {\n        var newState = this._updateState(patch);\n        this._patchContexts(newState);\n        this._state = newState;\n        this._model$.next(this._state);\n    };\n    NgbDatepickerService.prototype._patchContexts = function (state) {\n        var months = state.months, displayMonths = state.displayMonths, selectedDate = state.selectedDate, focusDate = state.focusDate, focusVisible = state.focusVisible, disabled = state.disabled, outsideDays = state.outsideDays;\n        state.months.forEach(function (month) {\n            month.weeks.forEach(function (week) {\n                week.days.forEach(function (day) {\n                    // patch focus flag\n                    if (focusDate) {\n                        day.context.focused = focusDate.equals(day.date) && focusVisible;\n                    }\n                    // calculating tabindex\n                    day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n                    // override context disabled\n                    if (disabled === true) {\n                        day.context.disabled = true;\n                    }\n                    // patch selection flag\n                    if (selectedDate !== undefined) {\n                        day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n                    }\n                    // visibility\n                    if (month.number !== day.date.month) {\n                        day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                            (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                                day.date.before(months[displayMonths - 1].lastDate));\n                    }\n                });\n            });\n        });\n    };\n    NgbDatepickerService.prototype._updateState = function (patch) {\n        // patching fields\n        var state = Object.assign({}, this._state, patch);\n        var startDate = state.firstDate;\n        // min/max dates changed\n        if ('minDate' in patch || 'maxDate' in patch) {\n            checkMinBeforeMax(state.minDate, state.maxDate);\n            state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n            state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n        }\n        // disabled\n        if ('disabled' in patch) {\n            state.focusVisible = false;\n        }\n        // initial rebuild via 'select()'\n        if ('selectedDate' in patch && this._state.months.length === 0) {\n            startDate = state.selectedDate;\n        }\n        // focus date changed\n        if ('focusDate' in patch) {\n            state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n            // nothing to rebuild if only focus changed and it is still visible\n            if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n                !state.focusDate.after(state.lastDate)) {\n                return state;\n            }\n        }\n        // first date changed\n        if ('firstDate' in patch) {\n            state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.firstDate;\n        }\n        // rebuilding months\n        if (startDate) {\n            var forceRebuild = 'firstDayOfWeek' in patch || 'markDisabled' in patch || 'minDate' in patch ||\n                'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n            var months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n            // updating months and boundary dates\n            state.months = months;\n            state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n            state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n            // reset selected date if 'markDisabled' returns true\n            if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n                state.selectedDate = null;\n            }\n            // adjusting focus after months were built\n            if ('firstDate' in patch) {\n                if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n                    state.focusDate.after(state.lastDate)) {\n                    state.focusDate = startDate;\n                }\n            }\n            // adjusting months/years for the select box navigation\n            var yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n            var monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n            if (state.navigation === 'select') {\n                // years ->  boundaries (min/max were changed)\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n                    state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n                }\n                // months -> when current year or boundaries change\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n                    state.selectBoxes.months =\n                        generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n                }\n            }\n            else {\n                state.selectBoxes = { years: [], months: [] };\n            }\n            // updating navigation arrows -> boundaries change (min/max) or month/year changes\n            if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n                (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n                state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n                state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n            }\n        }\n        return state;\n    };\n    NgbDatepickerService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NgbDatepickerService.ctorParameters = function () { return [\n        { type: NgbCalendar, },\n        { type: NgbDatepickerI18n, },\n    ]; };\n    return NgbDatepickerService;\n}());\nexport { NgbDatepickerService };\n//# sourceMappingURL=datepicker-service.js.map","import { NgbDate } from './ngb-date';\nimport { isDefined } from '../util/util';\nexport function isChangedDate(prev, next) {\n    return !dateComparator(prev, next);\n}\nexport function dateComparator(prev, next) {\n    return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\nexport function checkMinBeforeMax(minDate, maxDate) {\n    if (maxDate && minDate && maxDate.before(minDate)) {\n        throw new Error(\"'maxDate' \" + maxDate + \" should be greater than 'minDate' \" + minDate);\n    }\n}\nexport function checkDateInRange(date, minDate, maxDate) {\n    if (date && minDate && date.before(minDate)) {\n        return NgbDate.from(minDate);\n    }\n    if (date && maxDate && date.after(maxDate)) {\n        return NgbDate.from(maxDate);\n    }\n    return date;\n}\nexport function isDateSelectable(date, state) {\n    var minDate = state.minDate, maxDate = state.maxDate, disabled = state.disabled, markDisabled = state.markDisabled;\n    // clang-format off\n    return !(!isDefined(date) ||\n        disabled ||\n        (markDisabled && markDisabled(date, { year: date.year, month: date.month })) ||\n        (minDate && date.before(minDate)) ||\n        (maxDate && date.after(maxDate)));\n    // clang-format on\n}\nexport function generateSelectBoxMonths(calendar, date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    var months = calendar.getMonths();\n    if (minDate && date.year === minDate.year) {\n        var index = months.findIndex(function (month) { return month === minDate.month; });\n        months = months.slice(index);\n    }\n    if (maxDate && date.year === maxDate.year) {\n        var index = months.findIndex(function (month) { return month === maxDate.month; });\n        months = months.slice(0, index + 1);\n    }\n    return months;\n}\nexport function generateSelectBoxYears(date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    var start = minDate && minDate.year || date.year - 10;\n    var end = maxDate && maxDate.year || date.year + 10;\n    return Array.from({ length: end - start + 1 }, function (e, i) { return start + i; });\n}\nexport function nextMonthDisabled(calendar, date, maxDate) {\n    return maxDate && calendar.getNext(date, 'm').after(maxDate);\n}\nexport function prevMonthDisabled(calendar, date, minDate) {\n    var prevDate = calendar.getPrev(date, 'm');\n    return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n        prevDate.year < minDate.year && minDate.month === 1);\n}\nexport function buildMonths(calendar, date, state, i18n, force) {\n    var displayMonths = state.displayMonths, months = state.months;\n    // move old months to a temporary array\n    var monthsToReuse = months.splice(0, months.length);\n    // generate new first dates, nullify or reuse months\n    var firstDates = Array.from({ length: displayMonths }, function (_, i) {\n        var firstDate = calendar.getNext(date, 'm', i);\n        months[i] = null;\n        if (!force) {\n            var reusedIndex = monthsToReuse.findIndex(function (month) { return month.firstDate.equals(firstDate); });\n            // move reused month back to months\n            if (reusedIndex !== -1) {\n                months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n            }\n        }\n        return firstDate;\n    });\n    // rebuild nullified months\n    firstDates.forEach(function (firstDate, i) {\n        if (months[i] === null) {\n            months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {});\n        }\n    });\n    return months;\n}\nexport function buildMonth(calendar, date, state, i18n, month) {\n    if (month === void 0) { month = {}; }\n    var minDate = state.minDate, maxDate = state.maxDate, firstDayOfWeek = state.firstDayOfWeek, markDisabled = state.markDisabled, outsideDays = state.outsideDays;\n    month.firstDate = null;\n    month.lastDate = null;\n    month.number = date.month;\n    month.year = date.year;\n    month.weeks = month.weeks || [];\n    month.weekdays = month.weekdays || [];\n    date = getFirstViewDate(calendar, date, firstDayOfWeek);\n    // month has weeks\n    for (var week = 0; week < calendar.getWeeksPerMonth(); week++) {\n        var weekObject = month.weeks[week];\n        if (!weekObject) {\n            weekObject = month.weeks[week] = { number: 0, days: [], collapsed: true };\n        }\n        var days = weekObject.days;\n        // week has days\n        for (var day = 0; day < calendar.getDaysPerWeek(); day++) {\n            if (week === 0) {\n                month.weekdays[day] = calendar.getWeekday(date);\n            }\n            var newDate = new NgbDate(date.year, date.month, date.day);\n            var nextDate = calendar.getNext(newDate);\n            var ariaLabel = i18n.getDayAriaLabel(newDate);\n            // marking date as disabled\n            var disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n            if (!disabled && markDisabled) {\n                disabled = markDisabled(newDate, { month: month.number, year: month.year });\n            }\n            // saving first date of the month\n            if (month.firstDate === null && newDate.month === month.number) {\n                month.firstDate = newDate;\n            }\n            // saving last date of the month\n            if (newDate.month === month.number && nextDate.month !== month.number) {\n                month.lastDate = newDate;\n            }\n            var dayObject = days[day];\n            if (!dayObject) {\n                dayObject = days[day] = {};\n            }\n            dayObject.date = newDate;\n            dayObject.context = Object.assign(dayObject.context || {}, {\n                date: { year: newDate.year, month: newDate.month, day: newDate.day },\n                currentMonth: month.number, disabled: disabled,\n                focused: false,\n                selected: false\n            });\n            dayObject.tabindex = -1;\n            dayObject.ariaLabel = ariaLabel;\n            dayObject.hidden = false;\n            date = nextDate;\n        }\n        weekObject.number = calendar.getWeekNumber(days.map(function (day) { return NgbDate.from(day.date); }), firstDayOfWeek);\n        // marking week as collapsed\n        weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n            days[days.length - 1].date.month !== month.number;\n    }\n    return month;\n}\nexport function getFirstViewDate(calendar, date, firstDayOfWeek) {\n    var daysPerWeek = calendar.getDaysPerWeek();\n    var firstMonthDate = new NgbDate(date.year, date.month, 1);\n    var dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n    return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n//# sourceMappingURL=datepicker-tools.js.map","// clang-format on\n// clang-format on\nexport var NavigationEvent;\n// clang-format on\n(function (NavigationEvent) {\n    NavigationEvent[NavigationEvent[\"PREV\"] = 0] = \"PREV\";\n    NavigationEvent[NavigationEvent[\"NEXT\"] = 1] = \"NEXT\";\n})(NavigationEvent || (NavigationEvent = {}));\n//# sourceMappingURL=datepicker-view-model.js.map","import { take } from 'rxjs/operators';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, TemplateRef, forwardRef, EventEmitter, Output, ElementRef, NgZone } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NgbCalendar } from './ngb-calendar';\nimport { NgbDate } from './ngb-date';\nimport { NgbDatepickerService } from './datepicker-service';\nimport { NgbDatepickerKeyMapService } from './datepicker-keymap-service';\nimport { NavigationEvent } from './datepicker-view-model';\nimport { NgbDatepickerConfig } from './datepicker-config';\nimport { NgbDateAdapter } from './adapters/ngb-date-adapter';\nimport { NgbDatepickerI18n } from './datepicker-i18n';\nimport { isChangedDate } from './datepicker-tools';\nvar NGB_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return NgbDatepicker; }),\n    multi: true\n};\n/**\n * A lightweight and highly configurable datepicker directive\n */\nvar NgbDatepicker = /** @class */ (function () {\n    function NgbDatepicker(_keyMapService, _service, _calendar, i18n, config, _cd, _elementRef, _ngbDateAdapter, _ngZone) {\n        var _this = this;\n        this._keyMapService = _keyMapService;\n        this._service = _service;\n        this._calendar = _calendar;\n        this.i18n = i18n;\n        this._cd = _cd;\n        this._elementRef = _elementRef;\n        this._ngbDateAdapter = _ngbDateAdapter;\n        this._ngZone = _ngZone;\n        /**\n           * An event fired when navigation happens and currently displayed month changes.\n           * See NgbDatepickerNavigateEvent for the payload info.\n           */\n        this.navigate = new EventEmitter();\n        /**\n           * An event fired when user selects a date using keyboard or mouse.\n           * The payload of the event is currently selected NgbDateStruct.\n           */\n        this.select = new EventEmitter();\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        ['dayTemplate', 'displayMonths', 'firstDayOfWeek', 'markDisabled', 'minDate', 'maxDate', 'navigation',\n            'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n            .forEach(function (input) { return _this[input] = config[input]; });\n        this._selectSubscription = _service.select$.subscribe(function (date) { _this.select.emit(date.toStruct()); });\n        this._subscription = _service.model$.subscribe(function (model) {\n            var newDate = model.firstDate;\n            var oldDate = _this.model ? _this.model.firstDate : null;\n            var newSelectedDate = model.selectedDate;\n            var oldSelectedDate = _this.model ? _this.model.selectedDate : null;\n            var newFocusedDate = model.focusDate;\n            var oldFocusedDate = _this.model ? _this.model.focusDate : null;\n            _this.model = model;\n            // handling selection change\n            if (isChangedDate(newSelectedDate, oldSelectedDate)) {\n                _this.onTouched();\n                _this.onChange(_this._ngbDateAdapter.toModel(newSelectedDate));\n            }\n            // handling focus change\n            if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n                _this.focus();\n            }\n            // emitting navigation event if the first month changes\n            if (!newDate.equals(oldDate)) {\n                _this.navigate.emit({\n                    current: oldDate ? { year: oldDate.year, month: oldDate.month } : null,\n                    next: { year: newDate.year, month: newDate.month }\n                });\n            }\n            _cd.markForCheck();\n        });\n    }\n    /**\n     * Manually focus the focusable day in the datepicker\n     */\n    /**\n       * Manually focus the focusable day in the datepicker\n       */\n    NgbDatepicker.prototype.focus = /**\n       * Manually focus the focusable day in the datepicker\n       */\n    function () {\n        var _this = this;\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(function () {\n            var elementToFocus = _this._elementRef.nativeElement.querySelector('div.ngb-dp-day[tabindex=\"0\"]');\n            if (elementToFocus) {\n                elementToFocus.focus();\n            }\n        });\n    };\n    /**\n     * Navigates current view to provided date.\n     * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     * Use 'startDate' input as an alternative\n     */\n    /**\n       * Navigates current view to provided date.\n       * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n       * If nothing or invalid date provided calendar will open current month.\n       * Use 'startDate' input as an alternative\n       */\n    NgbDatepicker.prototype.navigateTo = /**\n       * Navigates current view to provided date.\n       * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n       * If nothing or invalid date provided calendar will open current month.\n       * Use 'startDate' input as an alternative\n       */\n    function (date) { this._service.open(NgbDate.from(date)); };\n    NgbDatepicker.prototype.ngOnDestroy = function () {\n        this._subscription.unsubscribe();\n        this._selectSubscription.unsubscribe();\n    };\n    NgbDatepicker.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.model === undefined) {\n            ['displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays'].forEach(function (input) { return _this._service[input] = _this[input]; });\n            this.navigateTo(this.startDate);\n        }\n    };\n    NgbDatepicker.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        ['displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays']\n            .filter(function (input) { return input in changes; })\n            .forEach(function (input) { return _this._service[input] = _this[input]; });\n        if ('startDate' in changes) {\n            this.navigateTo(this.startDate);\n        }\n    };\n    NgbDatepicker.prototype.onDateSelect = function (date) {\n        this._service.focus(date);\n        this._service.select(date, { emitEvent: true });\n    };\n    NgbDatepicker.prototype.onKeyDown = function (event) { this._keyMapService.processKey(event); };\n    NgbDatepicker.prototype.onNavigateDateSelect = function (date) { this._service.open(date); };\n    NgbDatepicker.prototype.onNavigateEvent = function (event) {\n        switch (event) {\n            case NavigationEvent.PREV:\n                this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n                break;\n            case NavigationEvent.NEXT:\n                this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n                break;\n        }\n    };\n    NgbDatepicker.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    NgbDatepicker.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    NgbDatepicker.prototype.setDisabledState = function (isDisabled) { this._service.disabled = isDisabled; };\n    NgbDatepicker.prototype.showFocus = function (focusVisible) { this._service.focusVisible = focusVisible; };\n    NgbDatepicker.prototype.writeValue = function (value) { this._service.select(NgbDate.from(this._ngbDateAdapter.fromModel(value))); };\n    NgbDatepicker.decorators = [\n        { type: Component, args: [{\n                    exportAs: 'ngbDatepicker',\n                    selector: 'ngb-datepicker',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styles: [\"\\n    :host {\\n      border: 1px solid #dfdfdf;\\n      border-radius: 0.25rem;\\n      display: inline-block;\\n    }\\n    .ngb-dp-month {\\n      pointer-events: none;\\n    }\\n    .ngb-dp-header {\\n      border-bottom: 0;\\n      border-radius: 0.25rem 0.25rem 0 0;\\n      padding-top: 0.25rem;\\n    }\\n    ngb-datepicker-month-view {\\n      pointer-events: auto;\\n    }\\n    .ngb-dp-month-name {\\n      font-size: larger;\\n      height: 2rem;\\n      line-height: 2rem;\\n      text-align: center;\\n    }\\n    /deep/ .ngb-dp-month + .ngb-dp-month > ngb-datepicker-month-view > .ngb-dp-week {\\n      padding-left: 1rem;\\n    }\\n    /deep/ .ngb-dp-month + .ngb-dp-month > .ngb-dp-month-name {\\n      padding-left: 1rem;\\n    }\\n    /deep/ .ngb-dp-month:last-child .ngb-dp-week {\\n      padding-right: .25rem;\\n    }\\n    /deep/ .ngb-dp-month:first-child .ngb-dp-week {\\n      padding-left: .25rem;\\n    }\\n    /deep/ .ngb-dp-month > ngb-datepicker-month-view > .ngb-dp-week:last-child {\\n      padding-bottom: .25rem;\\n    }\\n    .ngb-dp-months {\\n      display: -ms-flexbox;\\n      display: flex;\\n    }\\n  \"],\n                    template: \"\\n    <ng-template #dt let-date=\\\"date\\\" let-currentMonth=\\\"currentMonth\\\" let-selected=\\\"selected\\\" let-disabled=\\\"disabled\\\" let-focused=\\\"focused\\\">\\n      <div ngbDatepickerDayView\\n        [date]=\\\"date\\\"\\n        [currentMonth]=\\\"currentMonth\\\"\\n        [selected]=\\\"selected\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [focused]=\\\"focused\\\">\\n      </div>\\n    </ng-template>\\n\\n    <div class=\\\"ngb-dp-header bg-light\\\">\\n      <ngb-datepicker-navigation *ngIf=\\\"navigation !== 'none'\\\"\\n        [date]=\\\"model.firstDate\\\"\\n        [months]=\\\"model.months\\\"\\n        [disabled]=\\\"model.disabled\\\"\\n        [showSelect]=\\\"model.navigation === 'select'\\\"\\n        [prevDisabled]=\\\"model.prevDisabled\\\"\\n        [nextDisabled]=\\\"model.nextDisabled\\\"\\n        [selectBoxes]=\\\"model.selectBoxes\\\"\\n        (navigate)=\\\"onNavigateEvent($event)\\\"\\n        (select)=\\\"onNavigateDateSelect($event)\\\">\\n      </ngb-datepicker-navigation>\\n    </div>\\n\\n    <div class=\\\"ngb-dp-months\\\" (keydown)=\\\"onKeyDown($event)\\\" (focusin)=\\\"showFocus(true)\\\" (focusout)=\\\"showFocus(false)\\\">\\n      <ng-template ngFor let-month [ngForOf]=\\\"model.months\\\" let-i=\\\"index\\\">\\n        <div class=\\\"ngb-dp-month\\\">\\n          <div *ngIf=\\\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\\\"\\n                class=\\\"ngb-dp-month-name bg-light\\\">\\n            {{ i18n.getMonthFullName(month.number) }} {{ month.year }}\\n          </div>\\n          <ngb-datepicker-month-view\\n            [month]=\\\"month\\\"\\n            [dayTemplate]=\\\"dayTemplate || dt\\\"\\n            [showWeekdays]=\\\"showWeekdays\\\"\\n            [showWeekNumbers]=\\\"showWeekNumbers\\\"\\n            (select)=\\\"onDateSelect($event)\\\">\\n          </ngb-datepicker-month-view>\\n        </div>\\n      </ng-template>\\n    </div>\\n  \",\n                    providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService, NgbDatepickerKeyMapService]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDatepicker.ctorParameters = function () { return [\n        { type: NgbDatepickerKeyMapService, },\n        { type: NgbDatepickerService, },\n        { type: NgbCalendar, },\n        { type: NgbDatepickerI18n, },\n        { type: NgbDatepickerConfig, },\n        { type: ChangeDetectorRef, },\n        { type: ElementRef, },\n        { type: NgbDateAdapter, },\n        { type: NgZone, },\n    ]; };\n    NgbDatepicker.propDecorators = {\n        \"dayTemplate\": [{ type: Input },],\n        \"displayMonths\": [{ type: Input },],\n        \"firstDayOfWeek\": [{ type: Input },],\n        \"markDisabled\": [{ type: Input },],\n        \"maxDate\": [{ type: Input },],\n        \"minDate\": [{ type: Input },],\n        \"navigation\": [{ type: Input },],\n        \"outsideDays\": [{ type: Input },],\n        \"showWeekdays\": [{ type: Input },],\n        \"showWeekNumbers\": [{ type: Input },],\n        \"startDate\": [{ type: Input },],\n        \"navigate\": [{ type: Output },],\n        \"select\": [{ type: Output },],\n    };\n    return NgbDatepicker;\n}());\nexport { NgbDatepicker };\n//# sourceMappingURL=datepicker.js.map","\n    <ng-template #dt let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header bg-light\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-months\" (keydown)=\"onKeyDown($event)\" (focusin)=\"showFocus(true)\" (focusout)=\"showFocus(false)\">\n      <ng-template ngFor let-month [ngForOf]=\"model.months\" let-i=\"index\">\n        <div class=\"ngb-dp-month\">\n          <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\"\n                class=\"ngb-dp-month-name bg-light\">\n            {{ i18n.getMonthFullName(month.number) }} {{ month.year }}\n          </div>\n          <ngb-datepicker-month-view\n            [month]=\"month\"\n            [dayTemplate]=\"dayTemplate || dt\"\n            [showWeekdays]=\"showWeekdays\"\n            [showWeekNumbers]=\"showWeekNumbers\"\n            (select)=\"onDateSelect($event)\">\n          </ngb-datepicker-month-view>\n        </div>\n      </ng-template>\n    </div>\n  ","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { NgbDate } from './ngb-date';\nimport { Injectable } from '@angular/core';\nimport { isInteger } from '../util/util';\nfunction fromJSDate(jsDate) {\n    return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nfunction toJSDate(date) {\n    var jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // this is done avoid 30 -> 1930 conversion\n    if (!isNaN(jsDate.getTime())) {\n        jsDate.setFullYear(date.year);\n    }\n    return jsDate;\n}\nvar NgbCalendar = /** @class */ (function () {\n    function NgbCalendar() {\n    }\n    NgbCalendar.decorators = [\n        { type: Injectable },\n    ];\n    return NgbCalendar;\n}());\nexport { NgbCalendar };\nvar NgbCalendarGregorian = /** @class */ (function (_super) {\n    __extends(NgbCalendarGregorian, _super);\n    function NgbCalendarGregorian() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NgbCalendarGregorian.prototype.getDaysPerWeek = function () { return 7; };\n    NgbCalendarGregorian.prototype.getMonths = function () { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; };\n    NgbCalendarGregorian.prototype.getWeeksPerMonth = function () { return 6; };\n    NgbCalendarGregorian.prototype.getNext = function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        var jsDate = toJSDate(date);\n        switch (period) {\n            case 'y':\n                return new NgbDate(date.year + number, 1, 1);\n            case 'm':\n                jsDate = new Date(date.year, date.month + number - 1, 1, 12);\n                break;\n            case 'd':\n                jsDate.setDate(jsDate.getDate() + number);\n                break;\n            default:\n                return date;\n        }\n        return fromJSDate(jsDate);\n    };\n    NgbCalendarGregorian.prototype.getPrev = function (date, period, number) {\n        if (period === void 0) { period = 'd'; }\n        if (number === void 0) { number = 1; }\n        return this.getNext(date, period, -number);\n    };\n    NgbCalendarGregorian.prototype.getWeekday = function (date) {\n        var jsDate = toJSDate(date);\n        var day = jsDate.getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    };\n    NgbCalendarGregorian.prototype.getWeekNumber = function (week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        var date = week[thursdayIndex];\n        var jsDate = toJSDate(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        var time = jsDate.getTime();\n        jsDate.setMonth(0); // Compare with Jan 1\n        jsDate.setDate(1);\n        return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    };\n    NgbCalendarGregorian.prototype.getToday = function () { return fromJSDate(new Date()); };\n    NgbCalendarGregorian.prototype.isValid = function (date) {\n        if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n            return false;\n        }\n        var jsDate = toJSDate(date);\n        return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n            jsDate.getDate() === date.day;\n    };\n    NgbCalendarGregorian.decorators = [\n        { type: Injectable },\n    ];\n    return NgbCalendarGregorian;\n}(NgbCalendar));\nexport { NgbCalendarGregorian };\n//# sourceMappingURL=ngb-calendar.js.map","var NgbDate = /** @class */ (function () {\n    function NgbDate(year, month, day) {\n        this.year = year;\n        this.month = month;\n        this.day = day;\n    }\n    NgbDate.from = function (date) {\n        return date ? new NgbDate(date.year, date.month, date.day ? date.day : 1) : null;\n    };\n    NgbDate.prototype.equals = function (other) {\n        return other && this.year === other.year && this.month === other.month && this.day === other.day;\n    };\n    NgbDate.prototype.before = function (other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day < other.day;\n            }\n            else {\n                return this.month < other.month;\n            }\n        }\n        else {\n            return this.year < other.year;\n        }\n    };\n    NgbDate.prototype.after = function (other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day > other.day;\n            }\n            else {\n                return this.month > other.month;\n            }\n        }\n        else {\n            return this.year > other.year;\n        }\n    };\n    NgbDate.prototype.toStruct = function () { return { year: this.year, month: this.month, day: this.day }; };\n    NgbDate.prototype.toString = function () { return this.year + \"-\" + this.month + \"-\" + this.day; };\n    return NgbDate;\n}());\nexport { NgbDate };\n//# sourceMappingURL=ngb-date.js.map","import { Component, Input } from '@angular/core';\nvar NgbModalBackdrop = /** @class */ (function () {\n    function NgbModalBackdrop() {\n    }\n    NgbModalBackdrop.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-modal-backdrop',\n                    template: '',\n                    host: { '[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")' }\n                },] },\n    ];\n    /** @nocollapse */\n    NgbModalBackdrop.propDecorators = {\n        \"backdropClass\": [{ type: Input },],\n    };\n    return NgbModalBackdrop;\n}());\nexport { NgbModalBackdrop };\n//# sourceMappingURL=modal-backdrop.js.map","export var ModalDismissReasons;\n(function (ModalDismissReasons) {\n    ModalDismissReasons[ModalDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n    ModalDismissReasons[ModalDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(ModalDismissReasons || (ModalDismissReasons = {}));\n//# sourceMappingURL=modal-dismiss-reasons.js.map","import { DOCUMENT } from '@angular/common';\nimport { Component, Output, EventEmitter, Input, Inject, ElementRef, Renderer2 } from '@angular/core';\nimport { ModalDismissReasons } from './modal-dismiss-reasons';\nimport { ngbFocusTrap } from '../util/focus-trap';\nvar NgbModalWindow = /** @class */ (function () {\n    function NgbModalWindow(document, _elRef, _renderer) {\n        this._elRef = _elRef;\n        this._renderer = _renderer;\n        this.backdrop = true;\n        this.keyboard = true;\n        this.dismissEvent = new EventEmitter();\n        this._document = document;\n        ngbFocusTrap(this._elRef.nativeElement, this.dismissEvent);\n    }\n    NgbModalWindow.prototype.backdropClick = function ($event) {\n        if (this.backdrop === true && this._elRef.nativeElement === $event.target) {\n            this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n        }\n    };\n    NgbModalWindow.prototype.escKey = function ($event) {\n        if (this.keyboard && !$event.defaultPrevented) {\n            this.dismiss(ModalDismissReasons.ESC);\n        }\n    };\n    NgbModalWindow.prototype.dismiss = function (reason) { this.dismissEvent.emit(reason); };\n    NgbModalWindow.prototype.ngOnInit = function () {\n        this._elWithFocus = this._document.activeElement;\n        this._renderer.addClass(this._document.body, 'modal-open');\n    };\n    NgbModalWindow.prototype.ngAfterViewInit = function () {\n        if (!this._elRef.nativeElement.contains(document.activeElement)) {\n            this._elRef.nativeElement['focus'].apply(this._elRef.nativeElement, []);\n        }\n    };\n    NgbModalWindow.prototype.ngOnDestroy = function () {\n        var body = this._document.body;\n        var elWithFocus = this._elWithFocus;\n        var elementToFocus;\n        if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n            elementToFocus = elWithFocus;\n        }\n        else {\n            elementToFocus = body;\n        }\n        elementToFocus['focus'].apply(elementToFocus, []);\n        this._elWithFocus = null;\n        this._renderer.removeClass(body, 'modal-open');\n    };\n    NgbModalWindow.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-modal-window',\n                    host: {\n                        '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n                        'role': 'dialog',\n                        'tabindex': '-1',\n                        '(keyup.esc)': 'escKey($event)',\n                        '(click)': 'backdropClick($event)',\n                        '[attr.aria-labelledby]': 'ariaLabelledBy',\n                    },\n                    template: \"\\n    <div [class]=\\\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '')\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\"><ng-content></ng-content></div>\\n    </div>\\n    \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbModalWindow.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n        { type: ElementRef, },\n        { type: Renderer2, },\n    ]; };\n    NgbModalWindow.propDecorators = {\n        \"ariaLabelledBy\": [{ type: Input },],\n        \"backdrop\": [{ type: Input },],\n        \"centered\": [{ type: Input },],\n        \"keyboard\": [{ type: Input },],\n        \"size\": [{ type: Input },],\n        \"windowClass\": [{ type: Input },],\n        \"dismissEvent\": [{ type: Output, args: ['dismiss',] },],\n    };\n    return NgbModalWindow;\n}());\nexport { NgbModalWindow };\n//# sourceMappingURL=modal-window.js.map","\n    <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    ","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbPopover directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\nvar NgbPopoverConfig = /** @class */ (function () {\n    function NgbPopoverConfig() {\n        this.placement = 'top';\n        this.triggers = 'click';\n        this.disablePopover = false;\n    }\n    NgbPopoverConfig.decorators = [\n        { type: Injectable },\n    ];\n    return NgbPopoverConfig;\n}());\nexport { NgbPopoverConfig };\n//# sourceMappingURL=popover-config.js.map","import { Component, Directive, Input, Output, EventEmitter, ChangeDetectionStrategy, Injector, Renderer2, ElementRef, ViewContainerRef, ComponentFactoryResolver, NgZone } from '@angular/core';\nimport { listenToTriggers } from '../util/triggers';\nimport { positionElements } from '../util/positioning';\nimport { PopupService } from '../util/popup';\nimport { NgbPopoverConfig } from './popover-config';\nvar nextId = 0;\nvar NgbPopoverWindow = /** @class */ (function () {\n    function NgbPopoverWindow(_element, _renderer) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this.placement = 'top';\n    }\n    NgbPopoverWindow.prototype.applyPlacement = function (_placement) {\n        // remove the current placement classes\n        this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\n        this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\n        // set the new placement classes\n        this.placement = _placement;\n        // apply the new placement\n        this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\n        this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\n    };\n    NgbPopoverWindow.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-popover-window',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        '[class]': '\"popover bs-popover-\" + placement.split(\"-\")[0]+\" bs-popover-\" + placement + (popoverClass ? \" \" + popoverClass : \"\")',\n                        'role': 'tooltip',\n                        '[id]': 'id'\n                    },\n                    template: \"\\n    <div class=\\\"arrow\\\"></div>\\n    <h3 class=\\\"popover-header\\\">{{title}}</h3><div class=\\\"popover-body\\\"><ng-content></ng-content></div>\",\n                    styles: [\"\\n    :host.bs-popover-top .arrow, :host.bs-popover-bottom .arrow {\\n      left: 50%;\\n      margin-left: -5px;\\n    }\\n\\n    :host.bs-popover-top-left .arrow, :host.bs-popover-bottom-left .arrow {\\n      left: 2em;\\n    }\\n\\n    :host.bs-popover-top-right .arrow, :host.bs-popover-bottom-right .arrow {\\n      left: auto;\\n      right: 2em;\\n    }\\n\\n    :host.bs-popover-left .arrow, :host.bs-popover-right .arrow {\\n      top: 50%;\\n      margin-top: -5px;\\n    }\\n\\n    :host.bs-popover-left-top .arrow, :host.bs-popover-right-top .arrow {\\n      top: 0.7em;\\n    }\\n\\n    :host.bs-popover-left-bottom .arrow, :host.bs-popover-right-bottom .arrow {\\n      top: auto;\\n      bottom: 0.7em;\\n    }\\n  \"]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbPopoverWindow.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Renderer2, },\n    ]; };\n    NgbPopoverWindow.propDecorators = {\n        \"placement\": [{ type: Input },],\n        \"title\": [{ type: Input },],\n        \"id\": [{ type: Input },],\n        \"popoverClass\": [{ type: Input },],\n    };\n    return NgbPopoverWindow;\n}());\nexport { NgbPopoverWindow };\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\nvar NgbPopover = /** @class */ (function () {\n    function NgbPopover(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, ngZone) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        /**\n           * Emits an event when the popover is shown\n           */\n        this.shown = new EventEmitter();\n        /**\n           * Emits an event when the popover is hidden\n           */\n        this.hidden = new EventEmitter();\n        this._ngbPopoverWindowId = \"ngb-popover-\" + nextId++;\n        this.placement = config.placement;\n        this.triggers = config.triggers;\n        this.container = config.container;\n        this.disablePopover = config.disablePopover;\n        this.popoverClass = config.popoverClass;\n        this._popupService = new PopupService(NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n        this._zoneSubscription = ngZone.onStable.subscribe(function () {\n            if (_this._windowRef) {\n                _this._windowRef.instance.applyPlacement(positionElements(_this._elementRef.nativeElement, _this._windowRef.location.nativeElement, _this.placement, _this.container === 'body'));\n            }\n        });\n    }\n    NgbPopover.prototype._isDisabled = function () {\n        if (this.disablePopover) {\n            return true;\n        }\n        if (!this.ngbPopover && !this.popoverTitle) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Opens an elementâs popover. This is considered a âmanualâ triggering of the popover.\n     * The context is an optional value to be injected into the popover template when it is created.\n     */\n    /**\n       * Opens an elementâs popover. This is considered a âmanualâ triggering of the popover.\n       * The context is an optional value to be injected into the popover template when it is created.\n       */\n    NgbPopover.prototype.open = /**\n       * Opens an elementâs popover. This is considered a âmanualâ triggering of the popover.\n       * The context is an optional value to be injected into the popover template when it is created.\n       */\n    function (context) {\n        if (!this._windowRef && !this._isDisabled()) {\n            this._windowRef = this._popupService.open(this.ngbPopover, context);\n            this._windowRef.instance.title = this.popoverTitle;\n            this._windowRef.instance.popoverClass = this.popoverClass;\n            this._windowRef.instance.id = this._ngbPopoverWindowId;\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n            if (this.container === 'body') {\n                window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            // apply styling to set basic css-classes on target element, before going for positioning\n            this._windowRef.changeDetectorRef.detectChanges();\n            this._windowRef.changeDetectorRef.markForCheck();\n            // position popover along the element\n            this._windowRef.instance.applyPlacement(positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body'));\n            this.shown.emit();\n        }\n    };\n    /**\n     * Closes an elementâs popover. This is considered a âmanualâ triggering of the popover.\n     */\n    /**\n       * Closes an elementâs popover. This is considered a âmanualâ triggering of the popover.\n       */\n    NgbPopover.prototype.close = /**\n       * Closes an elementâs popover. This is considered a âmanualâ triggering of the popover.\n       */\n    function () {\n        if (this._windowRef) {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n            this._popupService.close();\n            this._windowRef = null;\n            this.hidden.emit();\n        }\n    };\n    /**\n     * Toggles an elementâs popover. This is considered a âmanualâ triggering of the popover.\n     */\n    /**\n       * Toggles an elementâs popover. This is considered a âmanualâ triggering of the popover.\n       */\n    NgbPopover.prototype.toggle = /**\n       * Toggles an elementâs popover. This is considered a âmanualâ triggering of the popover.\n       */\n    function () {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    };\n    /**\n     * Returns whether or not the popover is currently being shown\n     */\n    /**\n       * Returns whether or not the popover is currently being shown\n       */\n    NgbPopover.prototype.isOpen = /**\n       * Returns whether or not the popover is currently being shown\n       */\n    function () { return this._windowRef != null; };\n    NgbPopover.prototype.ngOnInit = function () {\n        this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this), this.toggle.bind(this));\n    };\n    NgbPopover.prototype.ngOnChanges = function (changes) {\n        // close popover if title and content become empty, or disablePopover set to true\n        if ((changes['ngbPopover'] || changes['popoverTitle'] || changes['disablePopover']) && this._isDisabled()) {\n            this.close();\n        }\n    };\n    NgbPopover.prototype.ngOnDestroy = function () {\n        this.close();\n        this._unregisterListenersFn();\n        this._zoneSubscription.unsubscribe();\n    };\n    NgbPopover.decorators = [\n        { type: Directive, args: [{ selector: '[ngbPopover]', exportAs: 'ngbPopover' },] },\n    ];\n    /** @nocollapse */\n    NgbPopover.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Renderer2, },\n        { type: Injector, },\n        { type: ComponentFactoryResolver, },\n        { type: ViewContainerRef, },\n        { type: NgbPopoverConfig, },\n        { type: NgZone, },\n    ]; };\n    NgbPopover.propDecorators = {\n        \"ngbPopover\": [{ type: Input },],\n        \"popoverTitle\": [{ type: Input },],\n        \"placement\": [{ type: Input },],\n        \"triggers\": [{ type: Input },],\n        \"container\": [{ type: Input },],\n        \"disablePopover\": [{ type: Input },],\n        \"popoverClass\": [{ type: Input },],\n        \"shown\": [{ type: Output },],\n        \"hidden\": [{ type: Output },],\n    };\n    return NgbPopover;\n}());\nexport { NgbPopover };\n//# sourceMappingURL=popover.js.map","\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\">{{title}}</h3><div class=\"popover-body\"><ng-content></ng-content></div>","import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbTooltip directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\nvar NgbTooltipConfig = /** @class */ (function () {\n    function NgbTooltipConfig() {\n        this.placement = 'top';\n        this.triggers = 'hover';\n        this.disableTooltip = false;\n    }\n    NgbTooltipConfig.decorators = [\n        { type: Injectable },\n    ];\n    return NgbTooltipConfig;\n}());\nexport { NgbTooltipConfig };\n//# sourceMappingURL=tooltip-config.js.map","import { Component, Directive, Input, Output, EventEmitter, ChangeDetectionStrategy, Injector, Renderer2, ElementRef, ViewContainerRef, ComponentFactoryResolver, NgZone } from '@angular/core';\nimport { listenToTriggers } from '../util/triggers';\nimport { positionElements } from '../util/positioning';\nimport { PopupService } from '../util/popup';\nimport { NgbTooltipConfig } from './tooltip-config';\nvar nextId = 0;\nvar NgbTooltipWindow = /** @class */ (function () {\n    function NgbTooltipWindow(_element, _renderer) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this.placement = 'top';\n    }\n    NgbTooltipWindow.prototype.applyPlacement = function (_placement) {\n        // remove the current placement classes\n        this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);\n        this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());\n        // set the new placement classes\n        this.placement = _placement;\n        // apply the new placement\n        this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);\n        this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());\n    };\n    NgbTooltipWindow.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-tooltip-window',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        '[class]': '\"tooltip show bs-tooltip-\" + placement.split(\"-\")[0]+\" bs-tooltip-\" + placement',\n                        'role': 'tooltip',\n                        '[id]': 'id'\n                    },\n                    template: \"<div class=\\\"arrow\\\"></div><div class=\\\"tooltip-inner\\\"><ng-content></ng-content></div>\",\n                    styles: [\"\\n    :host.bs-tooltip-top .arrow, :host.bs-tooltip-bottom .arrow {\\n      left: calc(50% - 0.4rem);\\n    }\\n\\n    :host.bs-tooltip-top-left .arrow, :host.bs-tooltip-bottom-left .arrow {\\n      left: 1em;\\n    }\\n\\n    :host.bs-tooltip-top-right .arrow, :host.bs-tooltip-bottom-right .arrow {\\n      left: auto;\\n      right: 0.8rem;\\n    }\\n\\n    :host.bs-tooltip-left .arrow, :host.bs-tooltip-right .arrow {\\n      top: calc(50% - 0.4rem);\\n    }\\n\\n    :host.bs-tooltip-left-top .arrow, :host.bs-tooltip-right-top .arrow {\\n      top: 0.4rem;\\n    }\\n\\n    :host.bs-tooltip-left-bottom .arrow, :host.bs-tooltip-right-bottom .arrow {\\n      top: auto;\\n      bottom: 0.4rem;\\n    }\\n  \"]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbTooltipWindow.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Renderer2, },\n    ]; };\n    NgbTooltipWindow.propDecorators = {\n        \"placement\": [{ type: Input },],\n        \"id\": [{ type: Input },],\n    };\n    return NgbTooltipWindow;\n}());\nexport { NgbTooltipWindow };\n/**\n * A lightweight, extensible directive for fancy tooltip creation.\n */\nvar NgbTooltip = /** @class */ (function () {\n    function NgbTooltip(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, ngZone) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        /**\n           * Emits an event when the tooltip is shown\n           */\n        this.shown = new EventEmitter();\n        /**\n           * Emits an event when the tooltip is hidden\n           */\n        this.hidden = new EventEmitter();\n        this._ngbTooltipWindowId = \"ngb-tooltip-\" + nextId++;\n        this.placement = config.placement;\n        this.triggers = config.triggers;\n        this.container = config.container;\n        this.disableTooltip = config.disableTooltip;\n        this._popupService = new PopupService(NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n        this._zoneSubscription = ngZone.onStable.subscribe(function () {\n            if (_this._windowRef) {\n                _this._windowRef.instance.applyPlacement(positionElements(_this._elementRef.nativeElement, _this._windowRef.location.nativeElement, _this.placement, _this.container === 'body'));\n            }\n        });\n    }\n    Object.defineProperty(NgbTooltip.prototype, \"ngbTooltip\", {\n        get: function () { return this._ngbTooltip; },\n        set: /**\n           * Content to be displayed as tooltip. If falsy, the tooltip won't open.\n           */\n        function (value) {\n            this._ngbTooltip = value;\n            if (!value && this._windowRef) {\n                this.close();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Opens an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n     * The context is an optional value to be injected into the tooltip template when it is created.\n     */\n    /**\n       * Opens an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n       * The context is an optional value to be injected into the tooltip template when it is created.\n       */\n    NgbTooltip.prototype.open = /**\n       * Opens an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n       * The context is an optional value to be injected into the tooltip template when it is created.\n       */\n    function (context) {\n        if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n            this._windowRef = this._popupService.open(this._ngbTooltip, context);\n            this._windowRef.instance.id = this._ngbTooltipWindowId;\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n            if (this.container === 'body') {\n                window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            this._windowRef.instance.placement = Array.isArray(this.placement) ? this.placement[0] : this.placement;\n            // apply styling to set basic css-classes on target element, before going for positioning\n            this._windowRef.changeDetectorRef.detectChanges();\n            this._windowRef.changeDetectorRef.markForCheck();\n            // position tooltip along the element\n            this._windowRef.instance.applyPlacement(positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body'));\n            this.shown.emit();\n        }\n    };\n    /**\n     * Closes an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n     */\n    /**\n       * Closes an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n       */\n    NgbTooltip.prototype.close = /**\n       * Closes an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n       */\n    function () {\n        if (this._windowRef != null) {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n            this._popupService.close();\n            this._windowRef = null;\n            this.hidden.emit();\n        }\n    };\n    /**\n     * Toggles an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n     */\n    /**\n       * Toggles an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n       */\n    NgbTooltip.prototype.toggle = /**\n       * Toggles an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n       */\n    function () {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    };\n    /**\n     * Returns whether or not the tooltip is currently being shown\n     */\n    /**\n       * Returns whether or not the tooltip is currently being shown\n       */\n    NgbTooltip.prototype.isOpen = /**\n       * Returns whether or not the tooltip is currently being shown\n       */\n    function () { return this._windowRef != null; };\n    NgbTooltip.prototype.ngOnInit = function () {\n        this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this), this.toggle.bind(this));\n    };\n    NgbTooltip.prototype.ngOnDestroy = function () {\n        this.close();\n        // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n        // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n        if (this._unregisterListenersFn) {\n            this._unregisterListenersFn();\n        }\n        this._zoneSubscription.unsubscribe();\n    };\n    NgbTooltip.decorators = [\n        { type: Directive, args: [{ selector: '[ngbTooltip]', exportAs: 'ngbTooltip' },] },\n    ];\n    /** @nocollapse */\n    NgbTooltip.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Renderer2, },\n        { type: Injector, },\n        { type: ComponentFactoryResolver, },\n        { type: ViewContainerRef, },\n        { type: NgbTooltipConfig, },\n        { type: NgZone, },\n    ]; };\n    NgbTooltip.propDecorators = {\n        \"placement\": [{ type: Input },],\n        \"triggers\": [{ type: Input },],\n        \"container\": [{ type: Input },],\n        \"disableTooltip\": [{ type: Input },],\n        \"shown\": [{ type: Output },],\n        \"hidden\": [{ type: Output },],\n        \"ngbTooltip\": [{ type: Input },],\n    };\n    return NgbTooltip;\n}());\nexport { NgbTooltip };\n//# sourceMappingURL=tooltip.js.map","<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { regExpEscape, toString } from '../util/util';\nvar NgbHighlight = /** @class */ (function () {\n    function NgbHighlight() {\n        this.highlightClass = 'ngb-highlight';\n    }\n    NgbHighlight.prototype.ngOnChanges = function (changes) {\n        var resultStr = toString(this.result);\n        var resultLC = resultStr.toLowerCase();\n        var termLC = toString(this.term).toLowerCase();\n        var currentIdx = 0;\n        if (termLC.length > 0) {\n            this.parts = resultLC.split(new RegExp(\"(\" + regExpEscape(termLC) + \")\")).map(function (part) {\n                var originalPart = resultStr.substr(currentIdx, part.length);\n                currentIdx += part.length;\n                return originalPart;\n            });\n        }\n        else {\n            this.parts = [resultStr];\n        }\n    };\n    NgbHighlight.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-highlight',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: \"<ng-template ngFor [ngForOf]=\\\"parts\\\" let-part let-isOdd=\\\"odd\\\">\" +\n                        \"<span *ngIf=\\\"isOdd\\\" class=\\\"{{highlightClass}}\\\">{{part}}</span><ng-template [ngIf]=\\\"!isOdd\\\">{{part}}</ng-template>\" +\n                        \"</ng-template>\",\n                    // template needs to be formatted in a certain way so we don't add empty text nodes\n                    styles: [\"\\n    .ngb-highlight {\\n      font-weight: bold;\\n    }\\n  \"]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbHighlight.propDecorators = {\n        \"highlightClass\": [{ type: Input },],\n        \"result\": [{ type: Input },],\n        \"term\": [{ type: Input },],\n    };\n    return NgbHighlight;\n}());\nexport { NgbHighlight };\n//# sourceMappingURL=highlight.js.map","<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\"><span *ngIf=\"isOdd\" class=\"{{highlightClass}}\">{{part}}</span><ng-template [ngIf]=\"!isOdd\">{{part}}</ng-template></ng-template>","import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { toString } from '../util/util';\nvar NgbTypeaheadWindow = /** @class */ (function () {\n    function NgbTypeaheadWindow() {\n        this.activeIdx = 0;\n        /**\n           * Flag indicating if the first row should be active initially\n           */\n        this.focusFirst = true;\n        /**\n           * A function used to format a given result before display. This function should return a formatted string without any\n           * HTML markup\n           */\n        this.formatter = toString;\n        /**\n           * Event raised when user selects a particular result row\n           */\n        this.selectEvent = new EventEmitter();\n        this.activeChangeEvent = new EventEmitter();\n    }\n    NgbTypeaheadWindow.prototype.hasActive = function () { return this.activeIdx > -1 && this.activeIdx < this.results.length; };\n    NgbTypeaheadWindow.prototype.getActive = function () { return this.results[this.activeIdx]; };\n    NgbTypeaheadWindow.prototype.markActive = function (activeIdx) {\n        this.activeIdx = activeIdx;\n        this._activeChanged();\n    };\n    NgbTypeaheadWindow.prototype.next = function () {\n        if (this.activeIdx === this.results.length - 1) {\n            this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n        }\n        else {\n            this.activeIdx++;\n        }\n        this._activeChanged();\n    };\n    NgbTypeaheadWindow.prototype.prev = function () {\n        if (this.activeIdx < 0) {\n            this.activeIdx = this.results.length - 1;\n        }\n        else if (this.activeIdx === 0) {\n            this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n        }\n        else {\n            this.activeIdx--;\n        }\n        this._activeChanged();\n    };\n    NgbTypeaheadWindow.prototype.resetActive = function () {\n        this.activeIdx = this.focusFirst ? 0 : -1;\n        this._activeChanged();\n    };\n    NgbTypeaheadWindow.prototype.select = function (item) { this.selectEvent.emit(item); };\n    NgbTypeaheadWindow.prototype.ngOnInit = function () { this.resetActive(); };\n    NgbTypeaheadWindow.prototype._activeChanged = function () {\n        this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n    };\n    NgbTypeaheadWindow.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngb-typeahead-window',\n                    exportAs: 'ngbTypeaheadWindow',\n                    host: { 'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id' },\n                    template: \"\\n    <ng-template #rt let-result=\\\"result\\\" let-term=\\\"term\\\" let-formatter=\\\"formatter\\\">\\n      <ngb-highlight [result]=\\\"formatter(result)\\\" [term]=\\\"term\\\"></ngb-highlight>\\n    </ng-template>\\n    <ng-template ngFor [ngForOf]=\\\"results\\\" let-result let-idx=\\\"index\\\">\\n      <button type=\\\"button\\\" class=\\\"dropdown-item\\\" role=\\\"option\\\"\\n        [id]=\\\"id + '-' + idx\\\"\\n        [class.active]=\\\"idx === activeIdx\\\"\\n        (mouseenter)=\\\"markActive(idx)\\\"\\n        (click)=\\\"select(result)\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"resultTemplate || rt\\\"\\n          [ngTemplateOutletContext]=\\\"{result: result, term: term, formatter: formatter}\\\"></ng-template>\\n      </button>\\n    </ng-template>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgbTypeaheadWindow.propDecorators = {\n        \"id\": [{ type: Input },],\n        \"focusFirst\": [{ type: Input },],\n        \"results\": [{ type: Input },],\n        \"term\": [{ type: Input },],\n        \"formatter\": [{ type: Input },],\n        \"resultTemplate\": [{ type: Input },],\n        \"selectEvent\": [{ type: Output, args: ['select',] },],\n        \"activeChangeEvent\": [{ type: Output, args: ['activeChange',] },],\n    };\n    return NgbTypeaheadWindow;\n}());\nexport { NgbTypeaheadWindow };\n//# sourceMappingURL=typeahead-window.js.map","\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  ","import { fromEvent } from 'rxjs';\nimport { filter, map, takeUntil, withLatestFrom } from 'rxjs/operators';\nimport { Key } from '../util/key';\nvar FOCUSABLE_ELEMENTS_SELECTOR = [\n    'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n    'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nfunction getFocusableBoundaryElements(element) {\n    var list = element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\n    return [list[0], list[list.length - 1]];\n}\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n */\nexport var ngbFocusTrap = function (element, stopFocusTrap$) {\n    // last focused element\n    var lastFocusedElement$ = fromEvent(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(function (e) { return e.target; }));\n    // 'tab' / 'shift+tab' stream\n    fromEvent(element, 'keydown')\n        .pipe(takeUntil(stopFocusTrap$), filter(function (e) { return e.which === Key.Tab; }), withLatestFrom(lastFocusedElement$))\n        .subscribe(function (_a) {\n        var tabEvent = _a[0], focusedElement = _a[1];\n        var _b = getFocusableBoundaryElements(element), first = _b[0], last = _b[1];\n        if (focusedElement === first && tabEvent.shiftKey) {\n            last.focus();\n            tabEvent.preventDefault();\n        }\n        if (focusedElement === last && !tabEvent.shiftKey) {\n            first.focus();\n            tabEvent.preventDefault();\n        }\n    });\n    // inside click\n    fromEvent(element, 'click')\n        .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(function (arr) { return arr[1]; }))\n        .subscribe(function (lastFocusedElement) { return lastFocusedElement.focus(); });\n};\n//# sourceMappingURL=focus-trap.js.map","export var Key;\n(function (Key) {\n    Key[Key[\"Tab\"] = 9] = \"Tab\";\n    Key[Key[\"Enter\"] = 13] = \"Enter\";\n    Key[Key[\"Escape\"] = 27] = \"Escape\";\n    Key[Key[\"Space\"] = 32] = \"Space\";\n    Key[Key[\"PageUp\"] = 33] = \"PageUp\";\n    Key[Key[\"PageDown\"] = 34] = \"PageDown\";\n    Key[Key[\"End\"] = 35] = \"End\";\n    Key[Key[\"Home\"] = 36] = \"Home\";\n    Key[Key[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n    Key[Key[\"ArrowUp\"] = 38] = \"ArrowUp\";\n    Key[Key[\"ArrowRight\"] = 39] = \"ArrowRight\";\n    Key[Key[\"ArrowDown\"] = 40] = \"ArrowDown\";\n})(Key || (Key = {}));\n//# sourceMappingURL=key.js.map","import { TemplateRef } from '@angular/core';\nvar ContentRef = /** @class */ (function () {\n    function ContentRef(nodes, viewRef, componentRef) {\n        this.nodes = nodes;\n        this.viewRef = viewRef;\n        this.componentRef = componentRef;\n    }\n    return ContentRef;\n}());\nexport { ContentRef };\nvar PopupService = /** @class */ (function () {\n    function PopupService(_type, _injector, _viewContainerRef, _renderer, _componentFactoryResolver) {\n        this._type = _type;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._renderer = _renderer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n    }\n    PopupService.prototype.open = function (content, context) {\n        if (!this._windowRef) {\n            this._contentRef = this._getContentRef(content, context);\n            this._windowRef = this._viewContainerRef.createComponent(this._componentFactoryResolver.resolveComponentFactory(this._type), 0, this._injector, this._contentRef.nodes);\n        }\n        return this._windowRef;\n    };\n    PopupService.prototype.close = function () {\n        if (this._windowRef) {\n            this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n            this._windowRef = null;\n            if (this._contentRef.viewRef) {\n                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n                this._contentRef = null;\n            }\n        }\n    };\n    PopupService.prototype._getContentRef = function (content, context) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            var viewRef = this._viewContainerRef.createEmbeddedView(content, context);\n            return new ContentRef([viewRef.rootNodes], viewRef);\n        }\n        else {\n            return new ContentRef([[this._renderer.createText(\"\" + content)]]);\n        }\n    };\n    return PopupService;\n}());\nexport { PopupService };\n//# sourceMappingURL=popup.js.map","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nvar \n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nPositioning = /** @class */ (function () {\n    function Positioning() {\n    }\n    Positioning.prototype.getAllStyles = function (element) { return window.getComputedStyle(element); };\n    Positioning.prototype.getStyle = function (element, prop) { return this.getAllStyles(element)[prop]; };\n    Positioning.prototype.isStaticPositioned = function (element) {\n        return (this.getStyle(element, 'position') || 'static') === 'static';\n    };\n    Positioning.prototype.offsetParent = function (element) {\n        var offsetParentEl = element.offsetParent || document.documentElement;\n        while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n            offsetParentEl = offsetParentEl.offsetParent;\n        }\n        return offsetParentEl || document.documentElement;\n    };\n    Positioning.prototype.position = function (element, round) {\n        if (round === void 0) { round = true; }\n        var elPosition;\n        var parentOffset = { width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0 };\n        if (this.getStyle(element, 'position') === 'fixed') {\n            elPosition = element.getBoundingClientRect();\n        }\n        else {\n            var offsetParentEl = this.offsetParent(element);\n            elPosition = this.offset(element, false);\n            if (offsetParentEl !== document.documentElement) {\n                parentOffset = this.offset(offsetParentEl, false);\n            }\n            parentOffset.top += offsetParentEl.clientTop;\n            parentOffset.left += offsetParentEl.clientLeft;\n        }\n        elPosition.top -= parentOffset.top;\n        elPosition.bottom -= parentOffset.top;\n        elPosition.left -= parentOffset.left;\n        elPosition.right -= parentOffset.left;\n        if (round) {\n            elPosition.top = Math.round(elPosition.top);\n            elPosition.bottom = Math.round(elPosition.bottom);\n            elPosition.left = Math.round(elPosition.left);\n            elPosition.right = Math.round(elPosition.right);\n        }\n        return elPosition;\n    };\n    Positioning.prototype.offset = function (element, round) {\n        if (round === void 0) { round = true; }\n        var elBcr = element.getBoundingClientRect();\n        var viewportOffset = {\n            top: window.pageYOffset - document.documentElement.clientTop,\n            left: window.pageXOffset - document.documentElement.clientLeft\n        };\n        var elOffset = {\n            height: elBcr.height || element.offsetHeight,\n            width: elBcr.width || element.offsetWidth,\n            top: elBcr.top + viewportOffset.top,\n            bottom: elBcr.bottom + viewportOffset.top,\n            left: elBcr.left + viewportOffset.left,\n            right: elBcr.right + viewportOffset.left\n        };\n        if (round) {\n            elOffset.height = Math.round(elOffset.height);\n            elOffset.width = Math.round(elOffset.width);\n            elOffset.top = Math.round(elOffset.top);\n            elOffset.bottom = Math.round(elOffset.bottom);\n            elOffset.left = Math.round(elOffset.left);\n            elOffset.right = Math.round(elOffset.right);\n        }\n        return elOffset;\n    };\n    Positioning.prototype.positionElements = function (hostElement, targetElement, placement, appendToBody) {\n        var hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n        var targetElStyles = this.getAllStyles(targetElement);\n        var targetElBCR = targetElement.getBoundingClientRect();\n        var placementPrimary = placement.split('-')[0] || 'top';\n        var placementSecondary = placement.split('-')[1] || 'center';\n        var targetElPosition = {\n            'height': targetElBCR.height || targetElement.offsetHeight,\n            'width': targetElBCR.width || targetElement.offsetWidth,\n            'top': 0,\n            'bottom': targetElBCR.height || targetElement.offsetHeight,\n            'left': 0,\n            'right': targetElBCR.width || targetElement.offsetWidth\n        };\n        switch (placementPrimary) {\n            case 'top':\n                targetElPosition.top =\n                    hostElPosition.top - (targetElement.offsetHeight + parseFloat(targetElStyles.marginBottom));\n                break;\n            case 'bottom':\n                targetElPosition.top = hostElPosition.top + hostElPosition.height;\n                break;\n            case 'left':\n                targetElPosition.left =\n                    hostElPosition.left - (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n                break;\n            case 'right':\n                targetElPosition.left = hostElPosition.left + hostElPosition.width;\n                break;\n        }\n        switch (placementSecondary) {\n            case 'top':\n                targetElPosition.top = hostElPosition.top;\n                break;\n            case 'bottom':\n                targetElPosition.top = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n                break;\n            case 'left':\n                targetElPosition.left = hostElPosition.left;\n                break;\n            case 'right':\n                targetElPosition.left = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n                break;\n            case 'center':\n                if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n                    targetElPosition.left = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;\n                }\n                else {\n                    targetElPosition.top = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;\n                }\n                break;\n        }\n        targetElPosition.top = Math.round(targetElPosition.top);\n        targetElPosition.bottom = Math.round(targetElPosition.bottom);\n        targetElPosition.left = Math.round(targetElPosition.left);\n        targetElPosition.right = Math.round(targetElPosition.right);\n        return targetElPosition;\n    };\n    // get the availble placements of the target element in the viewport dependeing on the host element\n    // get the availble placements of the target element in the viewport dependeing on the host element\n    Positioning.prototype.getAvailablePlacements = \n    // get the availble placements of the target element in the viewport dependeing on the host element\n    function (hostElement, targetElement) {\n        var availablePlacements = [];\n        var hostElemClientRect = hostElement.getBoundingClientRect();\n        var targetElemClientRect = targetElement.getBoundingClientRect();\n        var html = document.documentElement;\n        var windowHeight = window.innerHeight || html.clientHeight;\n        var windowWidth = window.innerWidth || html.clientWidth;\n        var hostElemClientRectHorCenter = hostElemClientRect.left + hostElemClientRect.width / 2;\n        var hostElemClientRectVerCenter = hostElemClientRect.top + hostElemClientRect.height / 2;\n        // left: check if target width can be placed between host left and viewport start and also height of target is\n        // inside viewport\n        if (targetElemClientRect.width < hostElemClientRect.left) {\n            // check for left only\n            if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 &&\n                windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {\n                availablePlacements.splice(availablePlacements.length, 1, 'left');\n            }\n            // check for left-top and left-bottom\n            this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'left', availablePlacements);\n        }\n        // top: target height is less than host top\n        if (targetElemClientRect.height < hostElemClientRect.top) {\n            if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 &&\n                windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {\n                availablePlacements.splice(availablePlacements.length, 1, 'top');\n            }\n            this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'top', availablePlacements);\n        }\n        // right: check if target width can be placed between host right and viewport end and also height of target is\n        // inside viewport\n        if (windowWidth - hostElemClientRect.right > targetElemClientRect.width) {\n            // check for right only\n            if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 &&\n                windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {\n                availablePlacements.splice(availablePlacements.length, 1, 'right');\n            }\n            // check for right-top and right-bottom\n            this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'right', availablePlacements);\n        }\n        // bottom: check if there is enough space between host bottom and viewport end for target height\n        if (windowHeight - hostElemClientRect.bottom > targetElemClientRect.height) {\n            if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 &&\n                windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {\n                availablePlacements.splice(availablePlacements.length, 1, 'bottom');\n            }\n            this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'bottom', availablePlacements);\n        }\n        return availablePlacements;\n    };\n    /**\n     * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom\n     * primaryplacement: left|right\n     * availablePlacementArr: array in which available placemets to be set\n     */\n    /**\n       * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom\n       * primaryplacement: left|right\n       * availablePlacementArr: array in which available placemets to be set\n       */\n    Positioning.prototype.setSecondaryPlacementForLeftRight = /**\n       * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom\n       * primaryplacement: left|right\n       * availablePlacementArr: array in which available placemets to be set\n       */\n    function (hostElemClientRect, targetElemClientRect, primaryPlacement, availablePlacementArr) {\n        var html = document.documentElement;\n        // check for left-bottom\n        if (targetElemClientRect.height <= hostElemClientRect.bottom) {\n            availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-bottom');\n        }\n        if ((window.innerHeight || html.clientHeight) - hostElemClientRect.top >= targetElemClientRect.height) {\n            availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-top');\n        }\n    };\n    /**\n     * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right\n     * primaryplacement: top|bottom\n     * availablePlacementArr: array in which available placemets to be set\n     */\n    /**\n       * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right\n       * primaryplacement: top|bottom\n       * availablePlacementArr: array in which available placemets to be set\n       */\n    Positioning.prototype.setSecondaryPlacementForTopBottom = /**\n       * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right\n       * primaryplacement: top|bottom\n       * availablePlacementArr: array in which available placemets to be set\n       */\n    function (hostElemClientRect, targetElemClientRect, primaryPlacement, availablePlacementArr) {\n        var html = document.documentElement;\n        // check for left-bottom\n        if ((window.innerWidth || html.clientWidth) - hostElemClientRect.left >= targetElemClientRect.width) {\n            availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-left');\n        }\n        if (targetElemClientRect.width <= hostElemClientRect.right) {\n            availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-right');\n        }\n    };\n    return Positioning;\n}());\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport { Positioning };\nvar positionService = new Positioning();\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nexport function positionElements(hostElement, targetElement, placement, appendToBody) {\n    var placementVals = Array.isArray(placement) ? placement : [placement];\n    // replace auto placement with other placements\n    var hasAuto = placementVals.findIndex(function (val) { return val === 'auto'; });\n    if (hasAuto >= 0) {\n        ['top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top',\n            'left-bottom', 'right-top', 'right-bottom',\n        ].forEach(function (obj) {\n            if (placementVals.find(function (val) { return val.search('^' + obj) !== -1; }) == null) {\n                placementVals.splice(hasAuto++, 1, obj);\n            }\n        });\n    }\n    // coordinates where to position\n    var topVal = 0, leftVal = 0;\n    var appliedPlacement;\n    // get available placements\n    var availablePlacements = positionService.getAvailablePlacements(hostElement, targetElement);\n    var _loop_1 = function (item, index) {\n        // check if passed placement is present in the available placement or otherwise apply the last placement in the\n        // passed placement list\n        if ((availablePlacements.find(function (val) { return val === item; }) != null) || (placementVals.length === index + 1)) {\n            appliedPlacement = item;\n            var pos = positionService.positionElements(hostElement, targetElement, item, appendToBody);\n            topVal = pos.top;\n            leftVal = pos.left;\n            return \"break\";\n        }\n    };\n    // iterate over all the passed placements\n    for (var _i = 0, _a = toItemIndexes(placementVals); _i < _a.length; _i++) {\n        var _b = _a[_i], item = _b.item, index = _b.index;\n        var state_1 = _loop_1(item, index);\n        if (state_1 === \"break\")\n            break;\n    }\n    targetElement.style.top = topVal + \"px\";\n    targetElement.style.left = leftVal + \"px\";\n    return appliedPlacement;\n}\n// function to get index and item of an array\nfunction toItemIndexes(a) {\n    return a.map(function (item, index) { return ({ item: item, index: index }); });\n}\n//# sourceMappingURL=positioning.js.map","var Trigger = /** @class */ (function () {\n    function Trigger(open, close) {\n        this.open = open;\n        this.close = close;\n        if (!close) {\n            this.close = open;\n        }\n    }\n    Trigger.prototype.isManual = function () { return this.open === 'manual' || this.close === 'manual'; };\n    return Trigger;\n}());\nexport { Trigger };\nvar DEFAULT_ALIASES = {\n    'hover': ['mouseenter', 'mouseleave']\n};\nexport function parseTriggers(triggers, aliases) {\n    if (aliases === void 0) { aliases = DEFAULT_ALIASES; }\n    var trimmedTriggers = (triggers || '').trim();\n    if (trimmedTriggers.length === 0) {\n        return [];\n    }\n    var parsedTriggers = trimmedTriggers.split(/\\s+/).map(function (trigger) { return trigger.split(':'); }).map(function (triggerPair) {\n        var alias = aliases[triggerPair[0]] || triggerPair;\n        return new Trigger(alias[0], alias[1]);\n    });\n    var manualTriggers = parsedTriggers.filter(function (triggerPair) { return triggerPair.isManual(); });\n    if (manualTriggers.length > 1) {\n        throw 'Triggers parse error: only one manual trigger is allowed';\n    }\n    if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n        throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n    }\n    return parsedTriggers;\n}\nvar noopFn = function () { };\nvar Éµ0 = noopFn;\nexport function listenToTriggers(renderer, nativeElement, triggers, openFn, closeFn, toggleFn) {\n    var parsedTriggers = parseTriggers(triggers);\n    var listeners = [];\n    if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n        return noopFn;\n    }\n    parsedTriggers.forEach(function (trigger) {\n        if (trigger.open === trigger.close) {\n            listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n        }\n        else {\n            listeners.push(renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n        }\n    });\n    return function () { listeners.forEach(function (unsubscribeFn) { return unsubscribeFn(); }); };\n}\nexport { Éµ0 };\n//# sourceMappingURL=triggers.js.map","export function toInteger(value) {\n    return parseInt(\"\" + value, 10);\n}\nexport function toString(value) {\n    return (value !== undefined && value !== null) ? \"\" + value : '';\n}\nexport function getValueInRange(value, max, min) {\n    if (min === void 0) { min = 0; }\n    return Math.max(Math.min(value, max), min);\n}\nexport function isString(value) {\n    return typeof value === 'string';\n}\nexport function isNumber(value) {\n    return !isNaN(toInteger(value));\n}\nexport function isInteger(value) {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\nexport function isDefined(value) {\n    return value !== undefined && value !== null;\n}\nexport function padNumber(value) {\n    if (isNumber(value)) {\n        return (\"0\" + value).slice(-2);\n    }\n    else {\n        return '';\n    }\n}\nexport function regExpEscape(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n//# sourceMappingURL=util.js.map","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { WhyComponent } from './components/why/why.component';\nimport { FaqComponent } from './components/faq/faq.component';\n\n\n\nconst routes: Routes = [\n    { path: '', component: HomeComponent },\n    { path: 'why', component: WhyComponent},\n    { path: 'faq', component: FaqComponent},\n    { path: '**', component: HomeComponent},\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","<app-header></app-header>\n<main id=\"app-main\">\n  <router-outlet></router-outlet>\n</main>\n<app-footer></app-footer>\n\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'eoswall';\n}\n","import { NgtUniversalModule } from '@ng-toolkit/universal';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { WallComponent } from './components/wall/wall.component';\nimport { ModalFormBuyComponent } from './components/modal-form-buy/modal-form-buy.component';\nimport { ModalFormUpdateComponent } from './components/modal-form-update/modal-form-update.component';\nimport { ModalNotificationComponent } from './components/modal-notification/modal-notification.component';\nimport { WhyComponent } from './components/why/why.component';\nimport { FaqComponent } from './components/faq/faq.component';\n\nimport { MouseService } from './services/mouse.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    WallComponent,\n    ModalNotificationComponent,\n    WhyComponent,\n    FaqComponent,\n    ModalFormBuyComponent,\n    ModalFormUpdateComponent,\n  ],\n  imports: [\n    CommonModule,\n    NgtUniversalModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    NgbModule.forRoot(),\n  ],\n  providers: [\n    MouseService\n  ],\n  entryComponents: [\n    ModalFormBuyComponent,\n    ModalFormUpdateComponent,\n    ModalNotificationComponent\n  ]\n})\nexport class AppModule { }\n","import { AppComponent } from './app.component';\nimport { AppModule } from './app.module';\nimport {NgModule} from '@angular/core';\n    import {ServerModule, ServerTransferStateModule} from '@angular/platform-server';\n    import {ModuleMapLoaderModule} from '@nguniversal/module-map-ngfactory-loader';\n    import { BrowserModule } from '@angular/platform-browser';\n    import { NoopAnimationsModule } from '@angular/platform-browser/animations';\n    \n    @NgModule({\n bootstrap: [AppComponent],\n\n        imports:[\n BrowserModule.withServerTransition({appId: 'app-root'}),\n \n AppModule,\n \n            ServerModule,\n            NoopAnimationsModule,\n            ModuleMapLoaderModule,\n            ServerTransferStateModule, // comment\n        ]\n    })\n    export class AppServerModule {}\n    ","<div class=\"container\">\n  <div class=\"row py-5\">\n    <div class=\"col-12\">\n      <div class=\"row mb-5\">\n        <div class=\"col-12\">\n          <h3 class=\"border-bottom pb-2 mb-4\">Frecuently Asked Questions:</h3>\n          <ngb-accordion [closeOthers]=\"true\">\n            <ngb-panel title=\"Â¿What is The EOS Wall?\">\n              <ng-template ngbPanelContent>\n                <p>\n                  The EOS Wall project was born as a proof of concept of EOS DAPP.\n                  <br> Every user that has an EOS account can buy a portion of the wall called\n                  <span class=\"font-weight-bold\">slot</span>. A slot is composed by a title, an image and an url to redirect when the slot is clicked.\n                  <br> All the slots are stored in the EOS blockchain and can be updated at anytime by it's owners.\n                </p>\n              </ng-template>\n            </ngb-panel>\n            <ngb-panel title=\"Â¿How is the price calculated?\">\n              <ng-template ngbPanelContent>\n                <p>\n                  The price of a slot is calculated with the following formula:\n                  <br>\n                  <span class=\"font-weight-bold\">\n                    <span class=\"badge badge-primary\">Slot price</span> =\n                    <span class=\"badge badge-info\">Pixel price</span> x\n                    <span class=\"badge badge-info\">Slot pixels</span>\n                  </span>\n                </p>\n                <hr>\n                <p>\n                  The pixel price will change over time automatically depending on the total pixels that had been sold. It is calculated with the following lineal\n                  functions:\n                </p>\n                <ul>\n                    <li class=\"font-weight-bold mb-4\">\n                      When, sold pixels <= 800,000 pixels, then:\n                      <br>\n                      <span class=\"badge badge-primary\">Pixel price</span> =\n                      <span class=\"badge badge-info\">0.0015 EOS</span> /\n                      <span class=\"badge badge-info\">1,000,000 pixels</span> x\n                      <span class=\"badge badge-info\">Pixels sold</span> +\n                      <span class=\"badge badge-info\">0.0005 EOS</span>\n                    </li>\n                    <li class=\"font-weight-bold\"> When, sold pixels > 800,000 pixels, then:\n                      <br>\n                      <span class=\"badge badge-primary\">Pixel price</span> =\n                      <span class=\"badge badge-info\">0.003 EOS</span> /\n                      <span class=\"badge badge-info\">1,000,000 pixels</span> x\n                      <span class=\"badge badge-info\">Pixels sold</span> +\n                      <span class=\"badge badge-info\">0.0005 EOS</span>\n                    </li>\n                  </ul>\n              </ng-template>\n            </ngb-panel>\n            <ngb-panel title=\"Â¿Who pays for RAM?\">\n              <ng-template ngbPanelContent>\n                The RAM for every new slot stored in the wall is payed by the smart contract itself.\n              </ng-template>\n            </ngb-panel>\n            <ngb-panel title=\"Â¿Can I trust the external links of the slots?\">\n              <ng-template ngbPanelContent>\n                <p>\n                  No, you can't. This app is not responsible for the content of external sites referenced by the slots.\n                  <br> However, we make our best to constantly moderate the slots. Any slot considered malicious will be removed\n                  from the wall.\n                </p>\n              </ng-template>\n            </ngb-panel>\n            <ngb-panel title=\"Â¿Where can I find the smart contract?\">\n              <ng-template ngbPanelContent>\n                <p>The smart contract has the following structure. For more information please refer to the Ricardian Contracts\n                  attached to the smart contract.</p>\n                <ul>\n                  <li class=\"font-weight-bold mb-2\">\n                    <span class=\"mr-2\">Contract:</span>\n                    <span class=\"badge badge-info\">{{Constants.network.code}}</span>\n                  </li>\n                  <li class=\"font-weight-bold mb-2\">\n                    <span class=\"mr-2\">Tables:</span>\n                    <span class=\"badge badge-info mr-2\">slot ({{Constants.network.code}} scope)</span>\n                    <span class=\"badge badge-info\">account (account scope)</span>\n                  </li>\n                  <li class=\"font-weight-bold mb-2\">\n                    <span class=\"mr-2\">Public actions:</span>\n                    <span class=\"badge badge-info mr-2\">buy</span>\n                    <span class=\"badge badge-info\">update</span>\n                  </li>\n                </ul>\n              </ng-template>\n            </ngb-panel>\n            <ngb-panel title=\"Â¿Why do I need Scatter to buy a slot?\">\n              <ng-template ngbPanelContent>\n                <p>\n                  To buy or update a slot, it is necessary to interact with the EOS blockchain. Scatter extension has the ability to interact\n                  with the blockchain by pushing and signing transactions safely using your browser.\n                </p>\n              </ng-template>\n            </ngb-panel>\n          </ngb-accordion>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <h3 class=\"border-bottom pb-2 mb-4\">Need support? Contact us:</h3>\n          <p>\n            If you need support, found a bug or have any comments you can contact us at\n            <span class=\"font-weight-bold\">support@eoswall.io</span>\n          </p>\n          <p class=\"lead\">\n            Enjoy!\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Title, Meta} from '@angular/platform-browser';\nimport { Constants } from '../../constants';\n\n@Component({\n  selector: 'app-faq',\n  templateUrl: './faq.component.html',\n  styleUrls: ['./faq.component.scss']\n})\nexport class FaqComponent implements OnInit {\n\n  private Constants;\n\n  constructor(public _Title: Title, public _Meta: Meta) { }\n\n  ngOnInit() {\n    this._Title.setTitle('Frequently asked questions - The EOS Wall');\n    this._Meta.addTags([\n      { name: 'description', content: `This are some frequently asked questions (FAQ) about the wall.` },\n      { name: 'author', content: 'The EOS Wall' },\n      { name: 'keywords', content: 'EOS, wall, faq, frecuently asked questions' }\n    ]);\n    this.Constants = Constants;\n  }\n\n}\n","<footer class=\"bg-light p-3\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-12 text-center\">\n          <p class=\"font-weight-bold\">EOS Wall&nbsp;&nbsp;|&nbsp;&nbsp;support@eoswall.io</p>\n          <p class=\"small\">This app is not responsible for the content of external sites</p>\n      </div>\n    </div>\n  </div>\n</footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<header id=\"app-header\" class=\"border-bottom d-flex bg-info\">\n  <nav class=\"navbar navbar-dark container py-3\">\n    <a routerLink=\"/\" class=\"navbar-brand\">\n      <img class=\"mr-2\" src=\"../../../assets/img/eoswall-blackbg.svg\" width=\"130px\">\n    </a>\n    <ul class=\"navbar-nav flex-row ml-auto\">\n      <li class=\"nav-item mr-4 d-none d-lg-inline-block\">\n        <a class=\"nav-link active font-weight-bold\" routerLink=\"/\">The wall</a>\n      </li>\n      <li class=\"nav-item mr-4\">\n        <a class=\"nav-link active font-weight-bold\" routerLink=\"why\">Why</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link active font-weight-bold\" routerLink=\"faq\">FAQ</a>\n      </li>\n    </ul>\n  </nav>\n</header>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  public isNavbarCollapsed: boolean;\n\n  constructor() {\n    this.isNavbarCollapsed = true;\n   }\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container py-5\">\n\t<div class=\"row mb-5\">\n\t\t<div *ngIf=\"!wall.isBuying && !wall.isUpdating\" class=\"col-12 mb-4\">\n\t\t\t<h3 class=\"text-muted text-center\">\n\t\t\t\tOwn a\n\t\t\t\t<span class=\"font-weight-bold\">SLOT</span>. Own a piece of\n\t\t\t\t<span class=\"font-weight-bold\">HISTORY</span>.\n\t\t\t</h3>\n\t\t\t<hr>\n\t\t</div>\n\t\t<div *ngIf=\"!wall.isLoading\" class=\"col-12\">\n\t\t\t<div *ngIf=\"!wall.isBuying && !wall.isUpdating\" class=\"text-center\">\n\t\t\t\t<button class=\"btn btn-success mr-4\" (click)=\"wall.isBuying = true\">Buy</button>\n\t\t\t\t<button class=\"btn btn-success mr-4\" (click)=\"wall.isUpdating = true\">Update slot</button>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"wall.isBuying\">\n\t\t\t\t<div class=\"d-flex justify-content-between align-items-center mb-4\">\n\t\t\t\t\t<hr>\n\t\t\t\t\t<button class=\"btn btn-secondary mr-2\" (click)=\"wall.isBuying = false\">\n\t\t\t\t\t\t<i class=\"fas fa-times mr-2\"></i>\n\t\t\t\t\t\t<span>Disable buy mode</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<hr>\n\t\t\t\t</div>\n\t\t\t\t<h4 class=\"text-center\">\n\t\t\t\t\tSelect the slot you want to buy\n\t\t\t\t</h4>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"wall.isUpdating\">\n\t\t\t\t<div class=\"d-flex justify-content-center align-items-center mb-4\">\n\t\t\t\t\t<hr>\n\t\t\t\t\t<button class=\"btn btn-secondary mr-2\" (click)=\"wall.isUpdating = false\">\n\t\t\t\t\t\t<i class=\"fas fa-times mr-2\"></i>\n\t\t\t\t\t\t<span>Disable update mode</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<hr>\n\t\t\t\t</div>\n\t\t\t\t<h4 class=\"text-center\">\n\t\t\t\t\tSelect the slot you want to update\n\t\t\t\t</h4>\n\t\t\t</div>\n\t\t</div>\n\t\t<div *ngIf=\"wall.isLoading\" class=\"col-12 text-center\">\n\t\t\t<i class=\"fas fa-circle-notch fa-spin mr-2\"></i>Loading...\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div *ngIf=\"!wall.isBuying && !wall.isUpdating\" class=\"col-12 text-center border-bottom pb-1 mb-3\">\n\t\t\t<span class=\"mr-2\">Pixels sold:\n\t\t\t\t<span class=\"badge badge-secondary mr-2\">{{wall.pixelsSold}}</span>\n\t\t\t</span>\n\t\t\t<span class=\"mr-2\">Pixel price:\n\t\t\t\t<span class=\"badge badge-secondary mr-2\">{{wall.pixelPrice ? wall.pixelPrice.toString() : ''}}</span>\n\t\t\t</span>\n\t\t\t<span>\n\t\t\t\tHaving trouble? Contact us at\n\t\t\t\t<span class=\"font-weight-bold\">support@eoswall.io</span>\n\t\t\t</span>\n\t\t</div>\n\t\t<div class=\"col-12\">\n\t\t\t<app-wall [isLoading]=\"wall.isLoading\" [slots]=\"wall.slots\" [pixelPrice]=\"wall.pixelPrice\" [isBuying]=\"wall.isBuying\" (buy)=\"onBuy($event)\" [isUpdating]=\"wall.isUpdating\"\n\t\t\t (update)=\"onUpdate($event)\"></app-wall>\n\t\t</div>\n\t</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {Â Title, Meta } from '@angular/platform-browser';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport ScatterJS from 'scatter-js/dist/scatter.esm';\nimport Eos from 'eosjs';\nimport { ModalFormBuyComponent } from '../modal-form-buy/modal-form-buy.component';\nimport { ModalFormUpdateComponent } from '../modal-form-update/modal-form-update.component';\nimport { ModalNotificationComponent } from '../modal-notification/modal-notification.component';\nimport { Constants } from '../../constants';\nimport { Slot } from '../../lib/slot';\nimport { Asset } from '../../lib/asset';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  public Constants;\n  public wall: {\n    isLoading: boolean,\n    slots: Slot[],\n    pixelsSold: number,\n    pixelPrice: Asset,\n    isBuying: boolean,\n    isUpdating: boolean,\n  } = {\n      isLoading: false,\n      slots: [],\n      pixelsSold: null,\n      pixelPrice: null,\n      isBuying: false,\n      isUpdating: false,\n    };\n\n  constructor(public _Title: Title, public _Meta: Meta, public _NgbModal: NgbModal) { }\n\n  ngOnInit() {\n    this._Title.setTitle('Own a SLOT. Own a piece of History - The EOS Wall');\n    this._Meta.addTags([\n      { name: 'description', content: `The EOS Wall project was born as a proof of concept of EOSIO DAPP.\n      Every user that has an EOSIO account can buy a portion of the wall called slot.` },\n      { name: 'author', content: 'The EOS Wall' },\n      { name: 'keywords', content: 'EOS, wall, slot, buy, blockchain, dapp, proof of concept, scatter, million dollar homepage' }\n    ]);\n    this.Constants = Constants;\n    this.wall.isLoading = true;\n    this.pullSlots()\n      .finally((response) => {\n        this.wall.isLoading = false;\n      });\n  }\n\n  public pullSlots() {\n    this.wall.slots = [];\n    const eos = Eos({\n      httpEndpoint: `${Constants.network.protocol}://${Constants.network.host}:${Constants.network.port}`,\n      chainId: Constants.network.chainId\n    });\n    return eos.getTableRows({\n      code: Constants.network.code,\n      scope: Constants.network.code,\n      table: 'slot',\n      json: true,\n      limit: 0\n    }).then((response) => {\n      const rawSlots = response.rows;\n      rawSlots.forEach((rawSlot) => {\n        const slot = new Slot({\n          id: rawSlot.id,\n          c1: [rawSlot.x1, rawSlot.y1],\n          c2: [rawSlot.x2, rawSlot.y2],\n          title: rawSlot.title,\n          image: rawSlot.image,\n          url: rawSlot.url,\n          owner: rawSlot.owner\n        });\n        this.wall.slots.push(slot);\n      });\n      this.wall.pixelsSold = 0;\n      this.wall.slots.forEach((slot) => {\n        this.wall.pixelsSold += slot.pixels;\n      });\n      const wallPixels = Constants.wall.wallWidth * Constants.wall.wallHeight;\n      const slope = (this.wall.pixelsSold <= 800000) ? (0.0015 / wallPixels) : (0.003 / wallPixels);\n      const pixelPriceAmount = (slope * this.wall.pixelsSold) + 0.0005;\n      this.wall.pixelPrice = new Asset(pixelPriceAmount, Constants.network.symbol);\n    });\n  }\n\n  public onBuy(slot: Slot) {\n    this.wall.isLoading = true;\n    const scatter = ScatterJS.scatter;\n    scatter.connect('EOS Wall')\n      .then(connected => {\n        this.wall.isLoading = false;\n        const modalSlotForm = this._NgbModal.open(ModalFormBuyComponent, {\n          size: 'lg'\n        });\n        modalSlotForm.componentInstance.slot = slot;\n        modalSlotForm.componentInstance.hasScatterInstalled = connected;\n        return modalSlotForm.result;\n      })\n      .then((formValue) => {\n        this.wall.isLoading = true;\n        const requiredFields = { accounts: [Constants.network] }; // require an account that is connected to the network\n        scatter.getIdentity(requiredFields)\n          .then(() => {\n            const account = scatter.identity.accounts.find(x => x.blockchain === Constants.network.blockchain);\n            const eosOptions = { expireInSeconds: 60 };\n            const eos = scatter.eos(Constants.network, Eos, eosOptions);\n            const transactionOptions = { authorization: [`${account.name}@${account.authority}`] };\n            eos.getTableRows({\n              code: Constants.network.code,\n              scope: account.name,\n              table: 'account',\n              json: true,\n              limit: 0\n            })\n              .then((response) => {\n                let debit: Asset;\n                if (response.rows.length > 0) {\n                  const balance = Asset.fromString(response.rows[0].balance);\n                  if (balance.amount >= slot.price.amount) {\n                    // no need to deposit\n                    return null;\n                  } else {\n                    // calculate missing balance\n                    const missingAmount = (slot.price.amount - balance.amount);\n                    debit = new Asset(missingAmount, Constants.network.symbol);\n                  }\n                } else {\n                  debit = slot.price;\n                }\n                return eos.transfer(account.name, Constants.network.code, debit.toString(),\n                  'Slot purchase - The EOS Wall', transactionOptions);\n              })\n              .then(() => eos.contract(Constants.network.code))\n              .then((contract) => contract.buy({\n                x1: slot.c1[0],\n                y1: slot.c1[1],\n                x2: slot.c2[0],\n                y2: slot.c2[1],\n                title: formValue.title,\n                image: formValue.image,\n                url: formValue.url,\n                buyer: account.name\n              }, transactionOptions))\n              .then((r) => this.pullSlots())\n              .then(() => {\n                const modalSuccess = this._NgbModal.open(ModalNotificationComponent, {\n                  size: 'lg'\n                });\n                modalSuccess.componentInstance.type = 'success';\n                modalSuccess.componentInstance.title = 'Great purchase!';\n                modalSuccess.componentInstance.description = 'The slot was assigned to your account';\n                this.wall.isBuying = false;\n              })\n              .catch(error => {\n                console.log(error);\n                // something went wrong with the transactions\n                const modalError = this._NgbModal.open(ModalNotificationComponent, {\n                  size: 'lg'\n                });\n                modalError.componentInstance.type = 'danger';\n                modalError.componentInstance.title = 'Oops! Something went wrong';\n                modalError.componentInstance.description = `Check that you have enough resources to buy the slot and try again.`;\n              })\n              .finally((response) => {\n                this.wall.isLoading = false;\n              });\n          })\n          .catch(error => {\n            // could not get identity\n            this.wall.isLoading = false;\n          });\n      }).catch(error => {\n        // modal was dismissed\n      });\n  }\n\n\n  public onUpdate(slot: Slot): void {\n    this.wall.isLoading = true;\n    const scatter = ScatterJS.scatter;\n    scatter.connect('EOS Wall')\n      .then(connected => {\n        this.wall.isLoading = false;\n        const modalSlotForm = this._NgbModal.open(ModalFormUpdateComponent, {\n          size: 'lg'\n        });\n        modalSlotForm.componentInstance.slot = slot;\n        modalSlotForm.componentInstance.hasScatterInstalled = connected;\n        return modalSlotForm.result;\n      })\n      .then((formValue) => {\n        this.wall.isLoading = true;\n        const requiredFields = { accounts: [Constants.network] }; // require an account that is connected to the network\n        scatter.getIdentity(requiredFields)\n          .then(() => {\n            const account = scatter.identity.accounts.find(x => x.blockchain === Constants.network.blockchain);\n            const eosOptions = { expireInSeconds: 60 };\n            const eos = scatter.eos(Constants.network, Eos, eosOptions);\n            const transactionOptions = { authorization: [`${account.name}@${account.authority}`] };\n            eos.contract(Constants.network.code)\n              .then((contract) => contract.update({\n                id: slot.id,\n                title: formValue.title,\n                image: formValue.image,\n                url: formValue.url,\n                owner: formValue.owner,\n              }, transactionOptions))\n              .then((r) => this.pullSlots())\n              .then(() => {\n                const modalSuccess = this._NgbModal.open(ModalNotificationComponent, {\n                  size: 'lg'\n                });\n                modalSuccess.componentInstance.type = 'success';\n                modalSuccess.componentInstance.title = 'All right!';\n                modalSuccess.componentInstance.description = 'The slot was updated successfully';\n                this.wall.isUpdating = false;\n              })\n              .catch(error => {\n                // something went wrong with the transactions\n                const modalError = this._NgbModal.open(ModalNotificationComponent, {\n                  size: 'lg'\n                });\n                modalError.componentInstance.type = 'danger';\n                modalError.componentInstance.title = 'Oops! Something went wrong';\n                modalError.componentInstance.description = 'Check that you are the owner of the slot and that you have enough resources.';\n              })\n              .finally((response) => {\n                this.wall.isLoading = false;\n              });\n          })\n          .catch(error => {\n            // could not get identity\n            this.wall.isLoading = false;\n          });\n      }).catch(error => {\n        // modal was dismissed\n      });\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\">Buy slot</h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"_NgbActiveModal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <div class=\"row\">\n    <div *ngIf=\"!hasScatterInstalled\" class=\"col-12 mb-4\">\n      <div class=\"alert alert-danger mb-0\">\n        <div class=\"row justify-content-center\">\n          <h1 class=\"mr-4\">\n            <i class=\"fas fa-exclamation-circle\"></i>\n          </h1>\n          <div>\n            You don't have Scatter extension installed. To buy a slot please install Scatter\n            <br> Don't know how to install Scatter? You can download it\n            <a href=\"https://chrome.google.com/webstore/detail/scatter/ammjpmhgckkpcamddpolhchgomcojkle\" target=\"_blank\">here</a>\n          </div>\n        </div>\n      </div>\n    </div>\n    <form [formGroup]=\"slotForm.formGroup\" (submit)=\"slotForm.submit()\" class=\"col-12\">\n      <div class=\"row form-group\">\n        <label class=\"col-12 col-lg-3 col-form-label text-lg-right font-weight-bold\">Title:</label>\n        <input class=\"col-12 col-lg-6 form-control\" formControlName=\"title\" placeholder=\"(visible when mouse is over the slot)\">\n        <div class=\"offset-3 pl-0 col-lg-9\">\n          <div *ngIf=\"!slotForm.formGroup.controls.title.valid && (this.slotForm.formGroup.controls.title.touched || this.slotForm.isSubmitted)\"\n            class=\"small text-danger font-weight-bold\">Please, choose a title with up to 60 characters</div>\n        </div>\n      </div>\n      <div class=\"row form-group\">\n        <div class=\"col-12 col-lg-9\">\n          <div class=\"row\">\n            <label class=\"col-12 col-lg-4 col-form-label text-lg-right font-weight-bold\">Image url:</label>\n            <input class=\"col-6 col-lg-8 form-control\" formControlName=\"image\" placeholder=\"(eg: wwww.mywebsite.com/myimage.jpg)\">\n          </div>\n          <div class=\"row\">\n            <div class=\"offset-4 pl-0 col-lg-8\">\n              <div *ngIf=\"slotForm.formGroup.controls.image.errors && (slotForm.formGroup.controls.image.errors.maxlength || slotForm.formGroup.controls.image.errors.required) && (this.slotForm.formGroup.controls.image.touched || this.slotForm.isSubmitted)\"\n                class=\"small text-danger font-weight-bold\">Please, use an url with up to 300 characters</div>\n                <div *ngIf=\"slotForm.formGroup.controls.image.errors && slotForm.formGroup.controls.image.errors.notFound && (this.slotForm.formGroup.controls.image.touched || this.slotForm.isSubmitted)\"\n                class=\"small text-danger font-weight-bold\">The image could not be fetched. Please check the url\n              </div>\n                <div *ngIf=\"slotForm.formGroup.controls.image.errors && slotForm.formGroup.controls.image.errors.invalidSize && (this.slotForm.formGroup.controls.image.touched || this.slotForm.isSubmitted)\"\n                class=\"small text-danger font-weight-bold\">The image should have {{slot.width}}x{{slot.height}} pixels to fit properly inside the\n                slot\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-2 col-lg-2 text-center\">\n          <p *ngIf=\"!slotForm.formGroup.value.image\">Preview...</p>\n          <img *ngIf=\"slotForm.formGroup.value.image\" class=\"img-fluid\" [src]=\"slotForm.formGroup.value.image\">\n        </div>\n      </div>\n      <div class=\"row form-group mb-4\">\n        <label class=\"col-12 col-lg-3 col-form-label text-lg-right font-weight-bold\">Redirect url:</label>\n        <input class=\"col-12 col-lg-8 form-control\" formControlName=\"url\" placeholder=\"(where to redirect when a click is made on the slot)\">\n        <div class=\"offset-3 pl-0 col-lg-9\">\n          <div *ngIf=\"!slotForm.formGroup.controls.url.valid && (this.slotForm.formGroup.controls.url.touched || this.slotForm.isSubmitted)\"\n            class=\"small text-danger font-weight-bold\">Please, use an url with up to 300 characters</div>\n        </div>\n      </div>\n      <div class=\"row my-4 py-4 border-top border-bottom\">\n        <div class=\"col-12\">\n          <div class=\"row mb-2\">\n            <label class=\"col-12 col-lg-3 col-form-label text-lg-right font-weight-bold\">DESCRIPTION:</label>\n            <input class=\"col-12 col-lg-6 form-control-plaintext px-0\" [value]=\"slot.width+'x'+slot.height+' pixels at position '+slot.c1[0]+','+slot.c1[1]+' ('+slot.pixels+' pixels)'\">\n          </div>\n          <h4 class=\"row mb-2\">\n              <label class=\"col-12 col-lg-3 col-form-label text-lg-right font-weight-bold\">TOTAL:</label>\n              <input class=\"col-12 col-lg-8 form-control-plaintext px-0 font-weight-bold\" [value]=\"slot.price.toString()\">\n            </h4>\n          </div>\n      </div>\n      <div class=\"row form-group justify-content-center\">\n        <div class=\"col-12 col-lg-10 text-center\">\n          <div class=\"d-flex justify-content-between\">\n            <button class=\"btn btn-secondary\" type=\"button\" (click)=\"_NgbActiveModal.dismiss('canceled')\">Cancel</button>\n            <button class=\"btn btn-info\" [disabled]=\"!hasScatterInstalled\">\n              <span class=\"mr-2\">Continue with Scatter</span>\n              <i class=\"fas fa-chevron-right\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport { Slot } from '../../lib/slot';\nimport { AppValidators } from '../../validators/app.validators';\n@Component({\n  selector: 'app-modal-form-buy',\n  templateUrl: './modal-form-buy.component.html',\n  styleUrls: ['./modal-form-buy.component.scss']\n})\nexport class ModalFormBuyComponent implements OnInit {\n\n  public slotForm: {\n    isLoading: boolean,\n    isSubmitted: boolean,\n    formGroup: FormGroup,\n    submit: Function\n  } = {\n      isLoading: false,\n      isSubmitted: false,\n      formGroup: this._FormBuilder.group({\n        title: [null, Validators.compose([Validators.required, Validators.maxLength(60)])],\n        image: [null, Validators.compose([Validators.required, Validators.maxLength(300)])],\n        url: [null, Validators.compose([Validators.required, Validators.maxLength(300)])]\n      }),\n      submit: () => {\n        this.slotForm.isSubmitted = true;\n        if (this.slotForm.formGroup.valid) {\n          this._NgbActiveModal.close(this.slotForm.formGroup.value);\n        }\n      }\n    };\n  @Input() slot: Slot;\n  @Input() hasScatterInstalled: boolean;\n\n  constructor(public _NgbActiveModal: NgbActiveModal, public _FormBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    const validatorFn = AppValidators.imageValidator(this.slot);\n    this.slotForm.formGroup.get('image').setAsyncValidators(validatorFn);\n  }\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title\">Update slot</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"_NgbActiveModal.dismiss('Cross click')\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"row\">\n      <div *ngIf=\"!hasScatterInstalled\" class=\"col-12 mb-4\">\n        <div class=\"alert alert-danger mb-0\">\n          <div class=\"row justify-content-center\">\n            <h1 class=\"mr-4\">\n              <i class=\"fas fa-exclamation-circle\"></i>\n            </h1>\n            <div>\n              You don't have Scatter extension installed. To update a slot please install Scatter\n              <br> Don't know how to install Scatter? You can download it\n              <a href=\"https://chrome.google.com/webstore/detail/scatter/ammjpmhgckkpcamddpolhchgomcojkle\" target=\"_blank\">here</a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <form [formGroup]=\"slotForm.formGroup\" (submit)=\"slotForm.submit()\" class=\"col-12\">\n        <div class=\"row form-group\">\n          <label class=\"col-12 col-lg-3 col-form-label text-lg-right font-weight-bold\">Title:</label>\n          <input class=\"col-12 col-lg-6 form-control\" formControlName=\"title\" placeholder=\"(visible when mouse is over the slot)\">\n          <div class=\"offset-3 pl-0 col-lg-9\">\n            <div *ngIf=\"!slotForm.formGroup.controls.title.valid && (this.slotForm.formGroup.controls.title.touched || this.slotForm.isSubmitted)\"\n              class=\"small text-danger font-weight-bold\">Please, choose a title with up to 60 characters</div>\n          </div>\n        </div>\n        <div class=\"row form-group\">\n          <div class=\"col-12 col-lg-9\">\n            <div class=\"row\">\n              <label class=\"col-12 col-lg-4 col-form-label text-lg-right font-weight-bold\">Image url:</label>\n              <input class=\"col-6 col-lg-8 form-control\" formControlName=\"image\" placeholder=\"(eg: wwww.mywebsite.com/myimage.jpg)\">\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-4 pl-0 col-lg-8\">\n                <div *ngIf=\"slotForm.formGroup.controls.image.errors && (slotForm.formGroup.controls.image.errors.maxlength || slotForm.formGroup.controls.image.errors.required) && (this.slotForm.formGroup.controls.image.touched || this.slotForm.isSubmitted)\"\n                  class=\"small text-danger font-weight-bold\">Please, use an url with up to 300 characters</div>\n                  <div *ngIf=\"slotForm.formGroup.controls.image.errors && slotForm.formGroup.controls.image.errors.notFound && (this.slotForm.formGroup.controls.image.touched || this.slotForm.isSubmitted)\"\n                  class=\"small text-danger font-weight-bold\">The image could not be fetched. Please check the url\n                </div>\n                  <div *ngIf=\"slotForm.formGroup.controls.image.errors && slotForm.formGroup.controls.image.errors.invalidSize && (this.slotForm.formGroup.controls.image.touched || this.slotForm.isSubmitted)\"\n                  class=\"small text-danger font-weight-bold\">The image should have {{slot.width}}x{{slot.height}} pixels to fit properly inside the\n                  slot\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-2 col-lg-2 text-center\">\n            <p *ngIf=\"!slotForm.formGroup.value.image\">Preview...</p>\n            <img *ngIf=\"slotForm.formGroup.value.image\" class=\"img-fluid\" [src]=\"slotForm.formGroup.value.image\">\n          </div>\n        </div>\n        <div class=\"row form-group\">\n          <label class=\"col-12 col-lg-3 col-form-label text-lg-right font-weight-bold\">Redirect url:</label>\n          <input class=\"col-12 col-lg-8 form-control\" formControlName=\"url\" placeholder=\"(where to redirect when a click is made on the slot)\">\n          <div class=\"offset-3 pl-0 col-lg-9\">\n            <div *ngIf=\"!slotForm.formGroup.controls.url.valid && (this.slotForm.formGroup.controls.url.touched || this.slotForm.isSubmitted)\"\n              class=\"small text-danger font-weight-bold\">Please, use an url with up to 300 characters</div>\n          </div>\n        </div>\n        <div class=\"row form-group mb-4\">\n            <label class=\"col-12 col-lg-3 col-form-label text-lg-right font-weight-bold\">Owner account:</label>\n            <input class=\"col-12 col-lg-6 form-control\" formControlName=\"owner\" maxlength=\"12\" placeholder=\"The owner account of the slot\">\n            <div class=\"offset-3 pl-0 col-lg-9\">\n              <div *ngIf=\"!slotForm.formGroup.controls.owner.valid && (this.slotForm.formGroup.controls.owner.touched || this.slotForm.isSubmitted)\"\n                class=\"small text-danger font-weight-bold\">Please, enter the owner account of this slot</div>\n            </div>\n          </div>\n        <div class=\"row my-4 py-4 border-top border-bottom\">\n            <label class=\"col-12 col-lg-3 col-form-label text-lg-right font-weight-bold\">DESCRIPTION:</label>\n            <input class=\"col-12 col-lg-6 form-control-plaintext px-0\" [value]=\"slot.width+'x'+slot.height+' pixels at position '+slot.c1[0]+','+slot.c1[1]+' ('+slot.pixels+' pixels)'\">\n        </div>\n        <div class=\"row form-group justify-content-center\">\n          <div class=\"col-12 col-lg-10 text-center\">\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-secondary\" type=\"button\" (click)=\"_NgbActiveModal.dismiss('canceled')\">Cancel</button>\n              <button class=\"btn btn-info\" [disabled]=\"!hasScatterInstalled\">\n                <span class=\"mr-2\">Continue with Scatter</span>\n                <i class=\"fas fa-chevron-right\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport { Slot } from '../../lib/slot';\nimport { AppValidators } from '../../validators/app.validators';\n@Component({\n  selector: 'app-modal-form-update',\n  templateUrl: './modal-form-update.component.html',\n  styleUrls: ['./modal-form-update.component.scss']\n})\nexport class ModalFormUpdateComponent implements OnInit {\n\n  public slotForm: {\n    isLoading: boolean,\n    isSubmitted: boolean,\n    formGroup: FormGroup,\n    submit: Function\n  } = {\n      isLoading: false,\n      isSubmitted: false,\n      formGroup: this._FormBuilder.group({\n        title: [null, Validators.compose([Validators.required, Validators.maxLength(60)])],\n        image: [null, Validators.compose([Validators.required, Validators.maxLength(300)])],\n        url: [null, Validators.compose([Validators.required, Validators.maxLength(300)])],\n        owner: [null, Validators.compose([Validators.required])]\n      }),\n      submit: () => {\n        this.slotForm.isSubmitted = true;\n        if (this.slotForm.formGroup.valid) {\n          this._NgbActiveModal.close(this.slotForm.formGroup.value);\n        }\n      }\n    };\n  @Input() slot: Slot;\n  @Input() hasScatterInstalled: boolean;\n\n  constructor(public _NgbActiveModal: NgbActiveModal, public _FormBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.slotForm.formGroup.get('title').setValue(this.slot.title);\n    this.slotForm.formGroup.get('image').setValue(this.slot.image);\n    this.slotForm.formGroup.get('url').setValue(this.slot.url);\n    this.slotForm.formGroup.get('owner').setValue(this.slot.owner);\n    const validatorFn = AppValidators.imageValidator(this.slot);\n    this.slotForm.formGroup.get('image').setAsyncValidators(validatorFn);\n  }\n}\n","<div class=\"modal-body p-0\">\n  <button type=\"button\" class=\"close m-2\" aria-label=\"Close\" (click)=\"_NgbActiveModal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div id=\"app-notification-header\" class=\"text-white text-center p-4\" [ngClass]=\"{'bg-success':type === 'success','bg-danger':type === 'danger','bg-warning':type === 'warning'}\">\n    <i class=\"fas fa-7x\" [ngClass]=\"{'fa-check-circle':type === 'success','fa-times-circle':type === 'danger','fa-exclamation-triangle':type === 'warning'}\"></i>\n  </div>\n  <div class=\"text-center p-4\">\n    <div class=\"mb-4\">\n      <h4 class=\"text-muted\">{{title}}</h4>\n      <h6 class=\"text-muted\">{{description}}</h6>\n    </div>\n    <hr>\n    <button type=\"button\" class=\"btn\" (click)=\"_NgbActiveModal.close('Close click')\" [ngClass]=\"{'btn-outline-success':type === 'success','btn-outline-danger':type === 'danger','btn-outline-warning':type === 'warning'}\">Ok</button>\n  </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-modal-notification',\n  templateUrl: './modal-notification.component.html',\n  styleUrls: ['./modal-notification.component.scss']\n})\nexport class ModalNotificationComponent implements OnInit {\n\n  @Input()type: string;\n  @Input()title: string;\n  @Input()description: string;\n\n  constructor(public _NgbActiveModal: NgbActiveModal) { }\n\n  ngOnInit() {}\n\n}\n","<div id=\"app-wall-wrapper\">\n  <div id=\"app-wall\" class=\"m-auto\" [ngClass]=\"[isBuying?'cursor-crosshair':'',isLoading?'loading':'']\">\n    <div id=\"app-wall-selection\" *ngIf=\"isBuying\" [ngStyle]=\"selection.slot.cssPosition\">\n      <div id=\"app-wall-selection-info\" class=\"p-2 bg-white border rounded\">\n        <p class=\"text-center\">\n          {{selection.slot.width}}x{{selection.slot.height}} at position {{selection.slot.c1[0]}},{{selection.slot.c1[1]}} ({{selection.slot.pixels}} px) \n        </p>\n        <p class=\"font-weight-bold text-center\">\n          Price: {{selection.slot.price.toString()}}\n        </p>\n        <button *ngIf=\"selection.intersects || selection.exceeded\" class=\"btn btn-danger btn-block font-weight-bold\" disabled>{{(selection.intersects) ? 'Slot is not available' : 'Slot is too big'}}</button>\n        <button *ngIf=\"!selection.intersects && !selection.exceeded\" class=\"btn btn-success btn-block font-weight-bold\" (click)=\"selectSlot()\">Buy this slot</button>\n      </div>\n      <div class=\"handle-m\" (mousedown)=\"selection.mousedown = 'm'\" [ngClass]=\"{'bg-danger':selection.intersects || selection.exceeded,'bg-info':!selection.intersects && !selection.exceeded}\"></div>\n      <div class=\"handle handle-tl bg-warning\" (mousedown)=\"selection.mousedown = 'tl'\"></div>\n      <div class=\"handle handle-t bg-warning\" (mousedown)=\"selection.mousedown = 't'\"></div>\n      <div class=\"handle handle-tr bg-warning\" (mousedown)=\"selection.mousedown = 'tr'\"></div>\n      <div class=\"handle handle-r bg-warning\" (mousedown)=\"selection.mousedown = 'r'\"></div>\n      <div class=\"handle handle-br bg-warning\" (mousedown)=\"selection.mousedown = 'br'\"></div>\n      <div class=\"handle handle-b bg-warning\" (mousedown)=\"selection.mousedown = 'b'\"></div>\n      <div class=\"handle handle-bl bg-warning\" (mousedown)=\"selection.mousedown = 'bl'\"></div>\n      <div class=\"handle handle-l bg-warning\" (mousedown)=\"selection.mousedown = 'l'\"></div>\n    </div>\n    <div *ngFor=\"let slot of slots\" class=\"app-slot\" [ngStyle]=\"slot.cssPosition\" [style.backgroundImage]=\"'url('+slot.image+')'\"\n      [ngClass]=\"[(isBuying)?'disabled-pointer-events':'',(isUpdating)?'app-slot-selected':'']\" [ngbTooltip]=\"slot.title+' ('+slot.owner+')'\" (click)=\"slotClick(slot)\">\n    </div>\n</div>","import { WINDOW } from '@ng-toolkit/universal';\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter , Inject} from '@angular/core';\nimport { MouseService } from '../../services/mouse.service';\nimport { Constants } from '../../constants';\nimport { Slot } from '../../lib/slot';\nimport { Asset } from '../../lib/asset';\nimport { Coordinate } from '../../types';\n\n@Component({\n  selector: 'app-wall',\n  templateUrl: './wall.component.html',\n  styleUrls: ['./wall.component.scss']\n})\nexport class WallComponent implements OnInit, OnChanges {\n\n  @Input() isLoading: boolean;\n  @Input() slots: Slot[];\n  @Input() pixelPrice: number;\n  @Input() isBuying: boolean;\n  @Input() isUpdating: boolean;\n  @Output() buy: EventEmitter<Slot> = new EventEmitter();\n  @Output() update: EventEmitter<Slot> = new EventEmitter();\n\n  public selection: {\n      slot: Slot;\n      intersects: boolean;\n      exceeded: boolean;\n      mousedown: 'm' | 'tl' | 't' | 'tr' | 'r' | 'br' | 'b' | 'bl' | 'l';\n      moved: {\n        x: number,\n        y: number\n      };\n      onMouseMove: Function;\n      onMouseUp: Function;\n    } = {\n      slot: null,\n      intersects: false,\n      exceeded: false,\n      mousedown: null,\n      moved: {\n        x: 0,\n        y: 0\n      },\n      onMouseMove: (event): void => {\n        if (this.selection.mousedown) {\n          this.selection.moved.x += event.movementX;\n          this.selection.moved.y += event.movementY;\n          const moveX = (Math.trunc(this.selection.moved.x / Constants.wall.minOrderPixels) * Constants.wall.minOrderPixels);\n          const moveY = (Math.trunc(this.selection.moved.y / Constants.wall.minOrderPixels) * Constants.wall.minOrderPixels);\n          const newC1: Coordinate = [this.selection.slot.c1[0], this.selection.slot.c1[1]];\n          const newC2: Coordinate = [this.selection.slot.c2[0], this.selection.slot.c2[1]];\n          switch (this.selection.mousedown) {\n            case 'm':\n              newC1[0] += moveX;\n              newC1[1] += moveY;\n              newC2[0] += moveX;\n              newC2[1] += moveY;\n              break;\n            case 'tl':\n              newC1[0] += moveX;\n              newC1[1] += moveY;\n              break;\n            case 't':\n              newC1[1] += moveY;\n              break;\n            case 'tr':\n              newC2[0] += moveX;\n              newC1[1] += moveY;\n              break;\n            case 'r':\n              newC2[0] += moveX;\n              break;\n            case 'br':\n              newC2[0] += moveX;\n              newC2[1] += moveY;\n              break;\n            case 'b':\n              newC2[1] += moveY;\n              break;\n            case 'bl':\n              newC1[0] += moveX;\n              newC2[1] += moveY;\n              break;\n            case 'l':\n              newC1[0] += moveX;\n              break;\n          }\n          const newSlot = new Slot({\n            c1: newC1,\n            c2: newC2,\n            pixelPrice: this.pixelPrice\n          });\n          if (newSlot.areCoordinatesValid()) {\n            this.selection.slot = newSlot;\n            this.selection.exceeded = this.exceeds(this.selection.slot.c1, this.selection.slot.c2);\n            this.selection.intersects = false;\n            if (moveX !== 0) {\n              this.selection.moved.x = 0;\n            }\n            if (moveY !== 0) {\n              this.selection.moved.y = 0;\n            }\n          }\n        }\n      },\n      onMouseUp: () => {\n        if (this.selection.mousedown) {\n          this.selection.mousedown = null;\n          this.selection.intersects = this.intersects(this.selection.slot.c1, this.selection.slot.c2);\n        }\n      }\n    };\n\n  constructor(@Inject(WINDOW) private window: Window, public _MouseService: MouseService) { }\n\n  ngOnInit() {\n    this._MouseService.mouseMove.subscribe((event) => {\n      this.selection.onMouseMove(event);\n    });\n    this._MouseService.mouseUp.subscribe((event) => {\n      this.selection.onMouseUp(event);\n    });\n  }\n\n  ngOnChanges(changes) {\n    if (changes.isBuying && changes.isBuying.currentValue) {\n      this.selection.slot = new Slot({\n        c1: [830, 70],\n        c2: [850, 90],\n        pixelPrice: this.pixelPrice\n      });\n      this.selection.intersects = this.intersects(this.selection.slot.c1, this.selection.slot.c2);\n    }\n  }\n\n  private intersects(c1, c2): boolean {\n    const intersectedSlots = [];\n    for (const slot of this.slots) {\n      if ( c1[0] < slot.c2[0] && c2[0] > slot.c1[0] && c1[1] < slot.c2[1] && c2[1] > slot.c1[1]) {\n        intersectedSlots.push(slot);\n      }\n    }\n    return (intersectedSlots.length > 0);\n  }\n\n  private exceeds(c1, c2) {\n    const slot = new Slot({\n      c1: c1,\n      c2: c2\n    });\n    return slot.pixels > (Constants.wall.maxOrderPixels * Constants.wall.maxOrderPixels);\n  }\n\n  public selectSlot(): void {\n    this.buy.emit(this.selection.slot);\n  }\n\n  public slotClick(slot): void {\n    if (!this.isBuying && !this.isUpdating) {\n      let url = slot.url;\n      if (!/^[a-z0-9]+:\\/\\//.test(url)) {\n        url = 'http://' + slot.url;\n      }\n      this.window.open(url);\n    } else if (this.isUpdating) {\n      this.update.emit(slot);\n    }\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row text-center py-5\">\n        <div class=\"col-12 mb-4\">\n             <h1>Because EOSIO is awesome!</h1>\n        </div>\n        <div class=\"col-10 offset-1\">\n            <img class=\"img-fluid\" src=\"../assets/img/eos.png\">\n         </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {Â Title, Meta} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-why',\n  templateUrl: './why.component.html',\n  styleUrls: ['./why.component.css']\n})\nexport class WhyComponent implements OnInit {\n\n  constructor(public _Title: Title, public _Meta: Meta) { }\n\n  ngOnInit() {\n    this._Title.setTitle('Why? - The EOS Wall');\n    this._Meta.addTags([\n      { name: 'description', content: `The EOS Wall project was born as a proof of concept of EOSIO DAPP.\n      Every user that has an EOSIO account can buy a portion of the wall called slot.` },\n      { name: 'author', content: 'The EOS Wall' },\n      { name: 'keywords', content: 'EOS, wall, faq, why' }\n    ]);\n  }\n\n}\n","const Constants = {\n  network: {\n    blockchain: 'eos',\n    protocol: 'https',\n    host: 'nodes.get-scatter.com',\n    port: 443,\n    chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906',\n    code: 'eosisrocking',\n    symbol: {\n      name: 'EOS',\n      precision: 4\n    }\n  },\n  wall: {\n    wallWidth: 1000,\n    wallHeight: 1000,\n    minOrderPixels: 10,\n    maxOrderPixels: 100,\n  }\n};\n\nexport { Constants };\n","import { Symbol } from '../types';\n\nclass Asset {\n\n  public amount: number;\n  public symbol: Symbol;\n\n  constructor(amount, symbol) {\n    this.amount = amount;\n    this.symbol = symbol;\n  }\n\n  public static fromString(input: string): Asset {\n    const parts = input.split(' ');\n    const amount = parseFloat(parts[0]);\n    const symbol = { name: parts[1], precision: parts[0].split('.')[1].length };\n    const asset = new Asset(amount, symbol);\n   return asset;\n  }\n\n  public toString(): string {\n    const output = `${this.amount.toFixed(this.symbol.precision)} ${this.symbol.name}`;\n    return output;\n  }\n\n}\n\nexport { Asset };\n","import { Constants } from '../constants';\nimport {Â Coordinate } from '../types';\nimport { Asset } from './asset';\n\nexport class Slot {\n\n  public id: number;\n  public c1: Coordinate;\n  public c2: Coordinate;\n  public width: number;\n  public height: number;\n  public pixels: number;\n  public cssPosition: { left: string, top: string, right: string, bottom: string };\n  public price: Asset;\n  public title: string;\n  public image: string;\n  public url: string;\n  public owner: string;\n\n  constructor(settings) {\n    this.id = settings.id;\n    this.c1 = settings.c1;\n    this.c2 = settings.c2;\n    this.title = settings.title || null;\n    this.image = settings.image || null;\n    this.url = settings.url || null;\n    this.owner = settings.owner || null;\n    this.width = this.c2[0] - this.c1[0];\n    this.height = this.c2[1] - this.c1[1];\n    this.pixels = this.width * this.height;\n    this.cssPosition = {\n      left: this.c1[0] + 'px',\n      top: this.c1[1] + 'px',\n      right: (Constants.wall.wallWidth - this.c2[0]) + 'px',\n      bottom: (Constants.wall.wallHeight - this.c2[1]) + 'px',\n    };\n    if (settings.pixelPrice) {\n      const pixelPrice: Asset = settings.pixelPrice;\n      const amount = pixelPrice.amount * this.pixels;\n      this.price = new Asset(amount, Constants.network.symbol);\n    }\n  }\n\n  public areCoordinatesValid(): boolean {\n    // is inside the wall?\n    const condition1 = (\n      this.c1[0] >= 0 && this.c1[0] <= Constants.wall.wallWidth && this.c1[1] >= 0 && this.c1[1] <= Constants.wall.wallHeight &&\n      this.c2[0] >= 0 && this.c2[0] <= Constants.wall.wallWidth && this.c2[1] >= 0 && this.c2[1] <= Constants.wall.wallHeight\n    );\n    // has minimum dimensions\n    const condition2 = (this.width >= Constants.wall.minOrderPixels && this.height >= Constants.wall.minOrderPixels);\n    const valid = (condition1 && condition2);\n    return valid;\n  }\n\n}\n","import { WINDOW } from '@ng-toolkit/universal';\nimport { Injectable, Inject } from '@angular/core';\nimport { fromEvent, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MouseService {\n\n  public mouseMove: Observable<Event>;\n  public mouseUp: Observable<Event>;\n  constructor(@Inject(WINDOW) private window: Window, ) {\n    this.mouseMove = fromEvent(window, 'mousemove');\n    this.mouseUp = fromEvent(window, 'mouseup');\n   }\n}\n","import {Â AbstractControl, ValidationErrors, AsyncValidatorFn } from '@angular/forms';\n\nexport class AppValidators {\n\n  public static imageValidator(slotDescription): AsyncValidatorFn {\n    return (control: AbstractControl): Promise<ValidationErrors | null> => {\n      const promise = new Promise((res) => {\n        const image = new Image();\n        image.onload = function () {\n          const loadedImage: any = this;\n          if (loadedImage.width === slotDescription.width && loadedImage.height === slotDescription.height) {\n            res(null);\n          } else {\n            res({ invalidSize: true });\n          }\n        };\n        image.onerror = function () {\n          res({ notFound: true });\n        };\n        image.src = control.value;\n      });\n      return promise;\n    };\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\n    import { environment } from './environments/environment';\n    \n    if (environment.production) {\n      enableProdMode();\n    }\n    \n    export {AppServerModule} from './app/app.server.module';\n    ","module.exports = require(\"@angular/animations\");","module.exports = require(\"@angular/animations/browser\");","module.exports = require(\"@angular/common\");","module.exports = require(\"@angular/common/http\");","module.exports = require(\"@angular/core\");","module.exports = require(\"@angular/forms\");","module.exports = require(\"@angular/http\");","module.exports = require(\"@angular/platform-browser\");","module.exports = require(\"@angular/platform-browser/animations\");","module.exports = require(\"@angular/platform-server\");","module.exports = require(\"@angular/router\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/accordion/accordion\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/accordion/accordion-config\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/accordion/accordion.module\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/alert/alert-config\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/alert/alert.module\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/buttons/buttons.module\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/carousel/carousel-config\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/carousel/carousel.module\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/collapse/collapse.module\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/modal/modal\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/modal/modal-ref\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/modal/modal-stack\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/modal/modal.module\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/pagination/pagination-config\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/pagination/pagination.module\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/popover/popover-config\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/popover/popover.module\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/rating/rating-config\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/rating/rating.module\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/tabset/tabset-config\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/tabset/tabset.module\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/timepicker/ngb-time-adapter\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/tooltip/tooltip\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/util/accessibility/live\");","module.exports = require(\"@ng-bootstrap/ng-bootstrap/util/scrollbar\");","module.exports = require(\"@ng-toolkit/universal\");","module.exports = require(\"@nguniversal/module-map-ngfactory-loader\");","module.exports = require(\"eosjs\");","module.exports = require(\"rxjs\");","module.exports = require(\"rxjs/operators\");","module.exports = require(\"scatter-js/dist/scatter.esm\");"],"sourceRoot":""}